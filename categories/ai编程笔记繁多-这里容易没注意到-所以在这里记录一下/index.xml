<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>笔记博客</title>
    <link>/categories/ai%E7%BC%96%E7%A8%8B%E7%AC%94%E8%AE%B0%E7%B9%81%E5%A4%9A-%E8%BF%99%E9%87%8C%E5%AE%B9%E6%98%93%E6%B2%A1%E6%B3%A8%E6%84%8F%E5%88%B0-%E6%89%80%E4%BB%A5%E5%9C%A8%E8%BF%99%E9%87%8C%E8%AE%B0%E5%BD%95%E4%B8%80%E4%B8%8B/</link>
    <description>笔记博客</description>
    <generator>Hugo 0.146.6 &amp; FixIt v0.3.18</generator>
    <language>en</language>
    <lastBuildDate>Thu, 20 Feb 2025 20:14:22 +0800</lastBuildDate>
    <atom:link href="/categories/ai%E7%BC%96%E7%A8%8B%E7%AC%94%E8%AE%B0%E7%B9%81%E5%A4%9A-%E8%BF%99%E9%87%8C%E5%AE%B9%E6%98%93%E6%B2%A1%E6%B3%A8%E6%84%8F%E5%88%B0-%E6%89%80%E4%BB%A5%E5%9C%A8%E8%BF%99%E9%87%8C%E8%AE%B0%E5%BD%95%E4%B8%80%E4%B8%8B/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>AI客户端如何解析github项目</title>
      <link>/posts/ai%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/ai%E5%AE%A2%E6%88%B7%E7%AB%AF%E8%A7%A3%E6%9E%90github%E9%A1%B9%E7%9B%AE/</link>
      <pubDate>Thu, 20 Feb 2025 20:14:22 +0800</pubDate>
      <guid>/posts/ai%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/ai%E5%AE%A2%E6%88%B7%E7%AB%AF%E8%A7%A3%E6%9E%90github%E9%A1%B9%E7%9B%AE/</guid>
      <category domain="/categories/ai%E7%BC%96%E7%A8%8B%E7%AC%94%E8%AE%B0%E7%B9%81%E5%A4%9A-%E8%BF%99%E9%87%8C%E5%AE%B9%E6%98%93%E6%B2%A1%E6%B3%A8%E6%84%8F%E5%88%B0-%E6%89%80%E4%BB%A5%E5%9C%A8%E8%BF%99%E9%87%8C%E8%AE%B0%E5%BD%95%E4%B8%80%E4%B8%8B/">AI编程（笔记繁多 这里容易没注意到 所以在这里记录一下）</category>
      <description>&lt;p&gt;[让AI解析github项目]&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;《1 直接把项目克隆下来，然后用AI客户端打开即可，反正项目说明README.md是markdown，图片什么的都有，再复杂的项目AI都能用README.md解析》&#xA;&#xA;&amp;lt;2 使用github MCP解析自己克隆下来的仓库&amp;gt;&#xA;&#xA;&amp;lt;3 给AI客户端添加URL文档集 直接把github项目地址作为文档集数据&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;</description>
    </item>
    <item>
      <title>AI客户端添加项目文档</title>
      <link>/posts/ai%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/ai%E5%AE%A2%E6%88%B7%E7%AB%AF%E6%B7%BB%E5%8A%A0%E9%A1%B9%E7%9B%AE%E6%96%87%E6%A1%A3/</link>
      <pubDate>Thu, 20 Feb 2025 20:14:22 +0800</pubDate>
      <guid>/posts/ai%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/ai%E5%AE%A2%E6%88%B7%E7%AB%AF%E6%B7%BB%E5%8A%A0%E9%A1%B9%E7%9B%AE%E6%96%87%E6%A1%A3/</guid>
      <category domain="/categories/ai%E7%BC%96%E7%A8%8B%E7%AC%94%E8%AE%B0%E7%B9%81%E5%A4%9A-%E8%BF%99%E9%87%8C%E5%AE%B9%E6%98%93%E6%B2%A1%E6%B3%A8%E6%84%8F%E5%88%B0-%E6%89%80%E4%BB%A5%E5%9C%A8%E8%BF%99%E9%87%8C%E8%AE%B0%E5%BD%95%E4%B8%80%E4%B8%8B/">AI编程（笔记繁多 这里容易没注意到 所以在这里记录一下）</category>
      <description>&lt;p&gt;[让AI解析github项目]&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;&amp;lt;1 给AI客户端添加URL文档集 直接把项目文档的地址作为文档集数据》&#xA;&#xA;&amp;lt;2 把在线项目文档的网页crlt+s保存下来后加入到当前项目&amp;gt;&#xA;&#xA;&amp;lt;3 使用联网 MCP服务 然后AI客户端联网去解析在线项目文档&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;</description>
    </item>
    <item>
      <title>hgithub page部署hugo博客</title>
      <link>/posts/hugo%E5%8D%9A%E5%AE%A2/github-page%E9%83%A8%E7%BD%B2hugo%E5%8D%9A%E5%AE%A2/</link>
      <pubDate>Thu, 20 Feb 2025 20:14:22 +0800</pubDate>
      <guid>/posts/hugo%E5%8D%9A%E5%AE%A2/github-page%E9%83%A8%E7%BD%B2hugo%E5%8D%9A%E5%AE%A2/</guid>
      <category domain="/categories/%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2/">项目部署</category>
      <description>&lt;h2 id=&#34;part1-创建新的-github-仓库&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;part1: 创建新的 GitHub 仓库&lt;/span&gt;&#xA;  &lt;a href=&#34;#part1-%e5%88%9b%e5%bb%ba%e6%96%b0%e7%9a%84-github-%e4%bb%93%e5%ba%93&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&lt;p&gt;(00:04-00:23) &lt;em&gt;&lt;strong&gt;1.1: 推荐仓库命名&lt;/strong&gt;&lt;/em&gt;&#xA;对于&lt;strong&gt;首次部署博客&lt;/strong&gt;的用户，视频&lt;strong&gt;推荐&lt;/strong&gt;将 GitHub &lt;strong&gt;仓库名称&lt;/strong&gt;设置为 &lt;code&gt;**用户名.github.io**&lt;/code&gt; 的格式。视频中演示了输入 &lt;code&gt;**letere-gg.github.io**&lt;/code&gt; 作为示例。&lt;/p&gt;&#xA;&lt;p&gt;(00:23-00:30) &lt;em&gt;&lt;strong&gt;1.2: 处理命名冲突&lt;/strong&gt;&lt;/em&gt;&#xA;视频指出 &lt;code&gt;**letere-gg.github.io**&lt;/code&gt; 这个特定名称在其账户下&lt;strong&gt;已被占用&lt;/strong&gt;，因为它已被用于&lt;strong&gt;部署&lt;/strong&gt;另一个项目（提及了 &lt;strong&gt;Hexo&lt;/strong&gt;，但后续操作基于 &lt;strong&gt;Hugo&lt;/strong&gt;）。&lt;/p&gt;&#xA;&lt;h2 id=&#34;part2-理解-github-pages-的-url-结构&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;part2: 理解 GitHub Pages 的 URL 结构&lt;/span&gt;&#xA;  &lt;a href=&#34;#part2-%e7%90%86%e8%a7%a3-github-pages-%e7%9a%84-url-%e7%bb%93%e6%9e%84&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&lt;p&gt;(00:30-00:47) &lt;em&gt;&lt;strong&gt;2.1: &lt;code&gt;用户名.github.io&lt;/code&gt; 仓库的 URL&lt;/strong&gt;&lt;/em&gt;&#xA;视频展示了名为 &lt;code&gt;**letere-gg.github.io**&lt;/code&gt; 的仓库，在其 &lt;strong&gt;Settings -&amp;gt; Pages&lt;/strong&gt; 中，生成的 &lt;strong&gt;GitHub Pages&lt;/strong&gt; 网站 URL 是&lt;strong&gt;根域名&lt;/strong&gt; &lt;code&gt;**https://letere-gg.github.io**&lt;/code&gt;。&lt;/p&gt;&#xA;&lt;p&gt;(00:48-01:02) &lt;em&gt;&lt;strong&gt;2.2: 普通仓库的 URL&lt;/strong&gt;&lt;/em&gt;&#xA;视频接着展示了另一个名为 &lt;code&gt;**hugo-stack**&lt;/code&gt; 的仓库，在其 &lt;strong&gt;Settings -&amp;gt; Pages&lt;/strong&gt; 中，生成的 &lt;strong&gt;GitHub Pages&lt;/strong&gt; 网站 URL 带有&lt;strong&gt;仓库名称作为子路径&lt;/strong&gt;，即 &lt;code&gt;**https://letere-gg.github.io/hugo-stack**&lt;/code&gt;。&lt;/p&gt;&#xA;&lt;p&gt;(01:02-01:18) &lt;em&gt;&lt;strong&gt;2.3: 部署建议&lt;/strong&gt;&lt;/em&gt;&#xA;基于以上对比，视频&lt;strong&gt;建议首次部署时使用 &lt;code&gt;用户名.github.io&lt;/code&gt; 格式命名仓库&lt;/strong&gt;，这样生成的网站 URL &lt;strong&gt;不带子路径&lt;/strong&gt;，可以&lt;strong&gt;避免一些潜在的 bug&lt;/strong&gt;。&lt;/p&gt;&#xA;&lt;h2 id=&#34;part3-设置新仓库与本地项目配置&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;part3: 设置新仓库与本地项目配置&lt;/span&gt;&#xA;  &lt;a href=&#34;#part3-%e8%ae%be%e7%bd%ae%e6%96%b0%e4%bb%93%e5%ba%93%e4%b8%8e%e6%9c%ac%e5%9c%b0%e9%a1%b9%e7%9b%ae%e9%85%8d%e7%bd%ae&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&lt;p&gt;(01:21-01:35) &lt;em&gt;&lt;strong&gt;3.1: 创建示例仓库&lt;/strong&gt;&lt;/em&gt;&#xA;由于推荐的仓库名已被占用，视频演示创建了一个&lt;strong&gt;新的示例仓库&lt;/strong&gt;，命名为 &lt;code&gt;**hugo-dev**&lt;/code&gt;，并确保其设置为 &lt;strong&gt;Public&lt;/strong&gt;（公开），因为&lt;strong&gt;只有公开仓库才能部署 GitHub Pages 静态页面&lt;/strong&gt;。&lt;/p&gt;&#xA;&lt;p&gt;(01:35-01:46) &lt;em&gt;&lt;strong&gt;3.2: 准备上传代码&lt;/strong&gt;&lt;/em&gt;&#xA;仓库创建成功后，页面显示了用于&lt;strong&gt;上传代码的 Git 命令&lt;/strong&gt;。视频提到下一步是上传代码，但在此之前需要&lt;strong&gt;修改一个配置文件&lt;/strong&gt;。&lt;/p&gt;&#xA;&lt;p&gt;(01:46-02:16) &lt;em&gt;&lt;strong&gt;3.3: 修改 &lt;code&gt;hugo.yaml&lt;/code&gt; 文件&lt;/strong&gt;&lt;/em&gt;&#xA;视频打开本地项目中的 &lt;code&gt;**hugo.yaml**&lt;/code&gt; 文件，指出需要修改 &lt;code&gt;**baseURL**&lt;/code&gt; 配置项。将其值&lt;strong&gt;修改为&lt;/strong&gt;与 GitHub Pages 部署后&lt;strong&gt;期望的 URL 一致&lt;/strong&gt;。因为仓库名是 &lt;code&gt;hugo-dev&lt;/code&gt;，所以 &lt;code&gt;baseURL&lt;/code&gt; 被设置为 &lt;code&gt;**https://letere-gg.github.io/hugo-dev/**&lt;/code&gt;，&lt;strong&gt;必须包含&lt;/strong&gt;末尾的仓库名子路径。&lt;/p&gt;&#xA;&lt;h2 id=&#34;part4-生成静态网站并上传至-github&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;part4: 生成静态网站并上传至 GitHub&lt;/span&gt;&#xA;  &lt;a href=&#34;#part4-%e7%94%9f%e6%88%90%e9%9d%99%e6%80%81%e7%bd%91%e7%ab%99%e5%b9%b6%e4%b8%8a%e4%bc%a0%e8%87%b3-github&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&lt;p&gt;(02:18-02:46) &lt;em&gt;&lt;strong&gt;4.1: 使用 Hugo 生成站点&lt;/strong&gt;&lt;/em&gt;&#xA;视频演示在本地项目文件夹中♈&lt;strong&gt;删除旧的 &lt;code&gt;public&lt;/code&gt; 文件夹&lt;/strong&gt;（如果存在）。然后在项目&lt;strong&gt;根目录&lt;/strong&gt;打开&lt;strong&gt;命令提示符 (cmd)&lt;/strong&gt;，♈运行 &lt;code&gt;**hugo -D**&lt;/code&gt; 命令。此命令使用 &lt;strong&gt;Hugo&lt;/strong&gt; &lt;strong&gt;编译&lt;/strong&gt;项目，并♈将生成的&lt;strong&gt;静态网站文件&lt;/strong&gt;输出到 &lt;code&gt;public&lt;/code&gt; 文件夹中。&lt;/p&gt;&#xA;&lt;p&gt;(02:46-03:18) &lt;em&gt;&lt;strong&gt;4.2: 初始化 Git 仓库&lt;/strong&gt;&lt;/em&gt;&#xA;♈进入新生成的 &lt;code&gt;public&lt;/code&gt; 文件夹，确认里面是&lt;strong&gt;静态网站内容&lt;/strong&gt;。在此 &lt;code&gt;public&lt;/code&gt; 文件夹内打开&lt;strong&gt;命令提示符 (cmd)&lt;/strong&gt;，并♈执行 &lt;code&gt;**git init**&lt;/code&gt; 命令，将其&lt;strong&gt;初始化为一个 Git 仓库&lt;/strong&gt;。&lt;/p&gt;&#xA;&lt;p&gt;(03:18-03:49) &lt;em&gt;&lt;strong&gt;4.3: 添加文件、提交并关联远程仓库&lt;/strong&gt;&lt;/em&gt;&#xA;♈按照 GitHub 页面提供的指南（略作修改）：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;使用 &lt;code&gt;**git add .**&lt;/code&gt; 命令将 &lt;code&gt;public&lt;/code&gt; 文件夹内&lt;strong&gt;所有生成的静态文件&lt;/strong&gt;添加到暂存区（视频强调是 &lt;code&gt;.&lt;/code&gt; 而不是 &lt;code&gt;README.md&lt;/code&gt;）。&lt;/li&gt;&#xA;&lt;li&gt;使用 &lt;code&gt;**git commit -m &amp;quot;first commit&amp;quot;**&lt;/code&gt; 提交更改。&lt;/li&gt;&#xA;&lt;li&gt;使用 &lt;code&gt;**git branch -M main**&lt;/code&gt; 将当前分支重命名为 &lt;code&gt;main&lt;/code&gt;。&lt;/li&gt;&#xA;&lt;li&gt;使用 &lt;code&gt;**git remote add origin https://github.com/letere-gg/hugo-dev.git**&lt;/code&gt; 关联到之前创建的&lt;strong&gt;远程 GitHub 仓库&lt;/strong&gt;。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;(03:49-04:08) &lt;em&gt;&lt;strong&gt;4.4: 推送代码到 GitHub&lt;/strong&gt;&lt;/em&gt;&#xA;♈执行 &lt;code&gt;**git push -u origin main**&lt;/code&gt; 命令，将本地 &lt;code&gt;main&lt;/code&gt; 分支的&lt;strong&gt;代码推送到 GitHub 远程仓库&lt;/strong&gt;。视频提到在国内环境可能需要&lt;strong&gt;开启代理&lt;/strong&gt;才能成功推送。推送完成后，&lt;strong&gt;刷新 GitHub 仓库页面&lt;/strong&gt;，可以看到&lt;strong&gt;静态文件已成功上传&lt;/strong&gt;。&lt;/p&gt;&#xA;&lt;h2 id=&#34;part5-启用-github-pages-并验证部署&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;part5: 启用 GitHub Pages 并验证部署&lt;/span&gt;&#xA;  &lt;a href=&#34;#part5-%e5%90%af%e7%94%a8-github-pages-%e5%b9%b6%e9%aa%8c%e8%af%81%e9%83%a8%e7%bd%b2&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&lt;p&gt;(04:09-04:23) &lt;em&gt;&lt;strong&gt;5.1: 配置 Pages 源&lt;/strong&gt;&lt;/em&gt;&#xA;返回 GitHub 上的 &lt;code&gt;hugo-dev&lt;/code&gt; 仓库页面，进入 &lt;strong&gt;Settings -&amp;gt; Pages&lt;/strong&gt; 选项卡。在 &amp;ldquo;Build and deployment&amp;rdquo; 部分下的 &amp;ldquo;Source&amp;rdquo; 设置中，选择 &lt;strong&gt;Deploy from a branch&lt;/strong&gt;，然后从 &amp;ldquo;Branch&amp;rdquo; 下拉菜单中选择 &lt;code&gt;**main**&lt;/code&gt; 分支，点击 &lt;strong&gt;Save&lt;/strong&gt;。&lt;/p&gt;&#xA;&lt;p&gt;(04:23-05:24) &lt;em&gt;&lt;strong&gt;5.2: 等待部署完成&lt;/strong&gt;&lt;/em&gt;&#xA;保存设置后，&lt;strong&gt;GitHub Pages 开始部署&lt;/strong&gt;过程。视频指出这&lt;strong&gt;需要一些时间&lt;/strong&gt;。等待页面刷新，直到显示 &amp;ldquo;Your site is live at &amp;hellip;&amp;rdquo; 并给出&lt;strong&gt;最终的网站 URL&lt;/strong&gt;：&lt;code&gt;**https://letere-gg.github.io/hugo-dev/**&lt;/code&gt;。&lt;/p&gt;&#xA;&lt;p&gt;(05:24-05:35) &lt;em&gt;&lt;strong&gt;5.3: 访问并验证站点&lt;/strong&gt;&lt;/em&gt;&#xA;点击页面上提供的&lt;strong&gt;网站链接&lt;/strong&gt;。浏览器成功加载了部署好的&lt;strong&gt;博客网站&lt;/strong&gt;，显示内容正常，证明&lt;strong&gt;部署已成功&lt;/strong&gt;。视频总结这个过程&lt;strong&gt;很简单&lt;/strong&gt;。&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>hugo博客action代码部署：action代码解析</title>
      <link>/posts/hugo%E5%8D%9A%E5%AE%A2/action-%E4%BB%A3%E7%A0%81%E6%88%91%E8%87%AA%E5%B7%B1%E5%86%99%E4%B8%8D%E6%9D%A5%E7%9A%84%E4%B8%8D%E7%94%A8ai%E7%9A%84%E6%83%85%E5%86%B5%E4%B8%8B%E9%9C%80%E8%A6%81steps%E5%AD%97%E6%AE%B5%E4%B8%8B%E7%9A%84users%E5%8F%82%E6%95%B0/</link>
      <pubDate>Thu, 20 Feb 2025 20:14:22 +0800</pubDate>
      <guid>/posts/hugo%E5%8D%9A%E5%AE%A2/action-%E4%BB%A3%E7%A0%81%E6%88%91%E8%87%AA%E5%B7%B1%E5%86%99%E4%B8%8D%E6%9D%A5%E7%9A%84%E4%B8%8D%E7%94%A8ai%E7%9A%84%E6%83%85%E5%86%B5%E4%B8%8B%E9%9C%80%E8%A6%81steps%E5%AD%97%E6%AE%B5%E4%B8%8B%E7%9A%84users%E5%8F%82%E6%95%B0/</guid>
      <category domain="/categories/%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2/">项目部署</category>
      <description>&lt;h2 id=&#34;hugo博客的action代码解析用aciton配置hugo博客的action代码&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;Hugo博客的action代码：解析用aciton配置hugo博客的action代码&lt;/span&gt;&#xA;  &lt;a href=&#34;#hugo%e5%8d%9a%e5%ae%a2%e7%9a%84action%e4%bb%a3%e7%a0%81%e8%a7%a3%e6%9e%90%e7%94%a8aciton%e9%85%8d%e7%bd%aehugo%e5%8d%9a%e5%ae%a2%e7%9a%84action%e4%bb%a3%e7%a0%81&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&lt;p&gt;好的，这是视频中展示的、由社区贡献者 (peaceiris) 维护的用于通过 GitHub Actions 部署 Hugo 站点的 Actions 工作流 YAML 代码：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;30&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;31&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;32&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;33&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;34&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;35&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;36&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;37&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;38&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;39&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;40&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;41&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;42&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;43&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;44&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;45&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;46&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;47&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;48&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;49&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;50&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;51&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;52&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;53&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;54&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;55&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;56&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;57&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;58&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;59&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;60&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;61&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;62&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c&#34;&gt;# 工作流名称&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;deploy&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# 触发工作流的事件&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;on&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;push&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;branches&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# 仅在 main 分支被推送时触发&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;- &lt;span class=&#34;l&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# 定义工作流中的作业&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;jobs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# 定义一个名为 deploy 的作业&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;deploy&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# 指定作业运行的环境为最新的 Ubuntu 系统&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;runs-on&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;ubuntu-latest&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# 定义作业中的步骤&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;steps&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# 步骤1：检出代码&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;Checkout&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# 使用官方的 actions/checkout 动作来获取仓库代码&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;uses&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;actions/checkout@v4&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;with&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# 获取完整的 Git 历史记录（对于部署工具 peaceiris/actions-gh-pages 可能需要）&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# 0 表示获取所有历史，而不是默认的浅克隆（只获取最后一次提交）&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;fetch-depth&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# 步骤2：设置 Hugo 环境&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;Setup Hugo&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# 使用社区维护的 peaceiris/actions-hugo 动作来安装 Hugo&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;uses&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;peaceiris/actions-hugo@v3&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;with&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# 指定要安装的 Hugo 版本为最新版&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;hugo-version&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;latest&amp;#39;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# 明确指定安装 Hugo 的 Extended 版本（支持 SASS/SCSS 等特性）&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;extended&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# 步骤3：构建网站&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;Build Web&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# 运行 Hugo 命令来生成静态网站文件&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# -D 参数表示包含草稿内容（如果本地预览用过，这里保持一致，或按需移除）&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;run&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;hugo -D&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# 步骤4：部署网站到 GitHub Pages&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;Deploy Web&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# 使用社区维护的 peaceiris/actions-gh-pages 动作来部署&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;uses&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;peaceiris/actions-gh-pages@v4&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;with&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# 指定用于认证的 Personal Access Token (PAT)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# ${{ secrets.TOKEN }} 会从仓库的 Secrets 中读取名为 TOKEN 的值&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# （视频中占位符是 你的token变量名，这里假设你设置为 TOKEN）&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;PERSONAL_TOKEN&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;${{ secrets.TOKEN }}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# 指定要将静态文件部署到的目标仓库&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# 格式为：你的GitHub用户名/目标仓库名&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# （视频中占位符是 你的github名/你的仓库名，这里假设目标仓库是 letere-gz/hugo-dev）&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;EXTERNAL_REPOSITORY&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;letere-gz/hugo-dev&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# 指定将静态文件推送到目标仓库的哪个分支（通常是 gh-pages 或 main）&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;PUBLISH_BRANCH&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# 指定包含构建好的静态网站文件的目录（Hugo 默认生成到 public）&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;PUBLISH_DIR&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;./public&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# 自定义部署时 Git 提交的信息&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;commit_message&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;auto deploy&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;代码解释 (遵循托勒斯法则/Law of Demeter - 关注“做什么”而非“怎么做”的内部细节):&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;code&gt;name: deploy&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;作用&lt;/strong&gt;: 给这个自动化流程（工作流）起个名字，叫做 &lt;code&gt;deploy&lt;/code&gt;。这个名字会显示在 GitHub 仓库的 &amp;ldquo;Actions&amp;rdquo; 标签页里，方便你识别。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;托勒斯法则&lt;/strong&gt;: 你只需要知道这是流程的名字，不需要关心 GitHub 内部如何使用这个名字。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;code&gt;on: push: branches: [main]&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;作用&lt;/strong&gt;: 定义&lt;strong&gt;触发&lt;/strong&gt;这个自动化流程的&lt;strong&gt;条件&lt;/strong&gt;。这里设置的是：当你向 &lt;code&gt;main&lt;/code&gt; 这个分支&lt;strong&gt;推送 (push) 代码&lt;/strong&gt;时，这个流程就会&lt;strong&gt;自动开始运行&lt;/strong&gt;。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;托勒斯法则&lt;/strong&gt;: 你只需要知道“推送到 main 分支”这个动作会启动流程，不需要关心 GitHub 是如何监控推送事件或分支的。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;code&gt;jobs: deploy:&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;作用&lt;/strong&gt;: 定义这个流程中要执行的一个或多个&lt;strong&gt;任务组（作业）&lt;/strong&gt;。这里只有一个任务组，名字叫 &lt;code&gt;deploy&lt;/code&gt;。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;托勒斯法则&lt;/strong&gt;: 你只需要知道这里开始定义一个主要的工作单元，它包含了一系列要完成的步骤。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;code&gt;runs-on: ubuntu-latest&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;作用&lt;/strong&gt;: 指定 &lt;code&gt;deploy&lt;/code&gt; 这个任务组&lt;strong&gt;运行在什么样的虚拟环境&lt;/strong&gt;里。这里指定的是 &lt;code&gt;ubuntu-latest&lt;/code&gt;，意味着 GitHub 会提供一个最新的 &lt;strong&gt;Ubuntu Linux&lt;/strong&gt; 虚拟服务器来运行后续步骤。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;托勒斯法则&lt;/strong&gt;: 你只需要知道你的自动化步骤将在一个 Linux 环境中执行，不需要关心这个环境是如何创建和管理的。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;code&gt;steps:&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;作用&lt;/strong&gt;: 定义 &lt;code&gt;deploy&lt;/code&gt; 作业中要&lt;strong&gt;按顺序执行&lt;/strong&gt;的&lt;strong&gt;具体步骤&lt;/strong&gt;。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;code&gt;- name: Checkout&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;作用&lt;/strong&gt;: 给这个步骤起个名字，叫 &lt;code&gt;Checkout&lt;/code&gt;，方便在日志中查看。&lt;/li&gt;&#xA;&lt;li&gt;♈&lt;strong&gt;&lt;code&gt;uses: actions/checkout@v4&lt;/code&gt;&lt;/strong&gt;: &lt;strong&gt;使用&lt;/strong&gt;一个&lt;strong&gt;预先写好的、官方提供的“动作” (Action)&lt;/strong&gt;，叫做 &lt;code&gt;actions/checkout&lt;/code&gt; (版本是 v4)。♐这个动作的功能是**把你的仓库代码下载（检出）**到当前的虚拟运行环境中，以便后续步骤可以使用这些代码。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;&lt;code&gt;with: fetch-depth: 0&lt;/code&gt;&lt;/strong&gt;: 这是给 &lt;code&gt;actions/checkout&lt;/code&gt; 动作传递的一个&lt;strong&gt;参数&lt;/strong&gt;。&lt;code&gt;fetch-depth: 0&lt;/code&gt; 的意思是&lt;strong&gt;下载完整的代码历史记录&lt;/strong&gt;，而不是默认只下载最近的一次提交。部署动作 &lt;code&gt;peaceiris/actions-gh-pages&lt;/code&gt; 有时需要完整的历史记录才能正确工作。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;托勒斯法则&lt;/strong&gt;: 你只需要知道这个步骤会把你的代码准备好，并且需要完整的历史。你不需要知道 &lt;code&gt;checkout&lt;/code&gt; 动作内部是如何通过 Git 命令实现下载的。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;code&gt;- name: Setup Hugo&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;作用&lt;/strong&gt;: 步骤名，设置 Hugo 环境。&lt;/li&gt;&#xA;&lt;li&gt;♈&lt;strong&gt;&lt;code&gt;uses: peaceiris/actions-hugo@v3&lt;/code&gt;&lt;/strong&gt;: &lt;strong&gt;使用&lt;/strong&gt;一个由&lt;strong&gt;社区开发者 (peaceiris) 维护的 Action&lt;/strong&gt;，叫做 &lt;code&gt;actions-hugo&lt;/code&gt; (版本是 v3)。这个动作专门用来&lt;strong&gt;安装和配置 Hugo&lt;/strong&gt;。&#xA;【♓这一步的作用是把能够执行 hugo 命令的那个程序安装好 ，因为♐即使你的项目文件上传到了仓库，也仍然需要安装 Hugo 包。你上传到仓库的是你博客的“原材料”（Markdown 文件、主题、配置），而不是制作网站的“工具”（即 Hugo 程序本身））。”&#xA;托勒斯法则: 你只需要知道，这一步负责获取你的博客源代码（包括你的 Markdown 文章、主题、配置文件等），并将它们准备好，以便后续步骤使用。它确实使用了你推送到仓库的文件，♈Action 运行环境是一个临时的、干净的 Linux 系统，它默认并没有安装 Hugo 这个“工具”】&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;&lt;code&gt;with:&lt;/code&gt;&lt;/strong&gt;: 给 &lt;code&gt;actions-hugo&lt;/code&gt; 动作传递参数：&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;&lt;code&gt;hugo-version: &#39;latest&#39;&lt;/code&gt;&lt;/strong&gt;: 告诉动作要安装&lt;strong&gt;最新版本&lt;/strong&gt;的 Hugo。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;&lt;code&gt;extended: true&lt;/code&gt;&lt;/strong&gt;: 告诉动作要安装 Hugo 的 &lt;strong&gt;Extended（扩展）版本&lt;/strong&gt;。这个版本支持 SASS/SCSS 等高级功能，很多主题需要它。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;托勒斯法则&lt;/strong&gt;: 你只需要知道这个步骤会自动安装好你需要的 Hugo 版本，不需要关心它具体从哪里下载、如何安装。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;code&gt;- name: Build Web&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;作用&lt;/strong&gt;: 步骤名，构建网站。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;&lt;code&gt;run: hugo -D&lt;/code&gt;&lt;/strong&gt;: &lt;strong&gt;直接运行一条命令&lt;/strong&gt;：&lt;code&gt;hugo -D&lt;/code&gt;。这就是你在本地用来&lt;strong&gt;生成静态网站文件&lt;/strong&gt;的命令。它会读取你的 Hugo 项目文件，并把最终的网站文件（HTML, CSS, JS, 图片等）生成到默认的 &lt;code&gt;public&lt;/code&gt; 目录下。&lt;code&gt;-D&lt;/code&gt; 参数是包含标记为草稿 (draft) 的内容。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;托勒斯法则&lt;/strong&gt;: 你只需要知道这个步骤执行了 Hugo 的构建命令，并产出了 &lt;code&gt;public&lt;/code&gt; 文件夹，就像你在本地操作一样。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;code&gt;- name: Deploy Web&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;作用&lt;/strong&gt;: 步骤名，部署网站。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;&lt;code&gt;uses: peaceiris/actions-gh-pages@v4&lt;/code&gt;&lt;/strong&gt;: &lt;strong&gt;使用&lt;/strong&gt;另一个由 &lt;strong&gt;peaceiris 维护的 Action&lt;/strong&gt;，叫做 &lt;code&gt;actions-gh-pages&lt;/code&gt; (版本是 v4)。这个动作专门用来&lt;strong&gt;将一个文件夹的内容推送到指定仓库的指定分支&lt;/strong&gt;，非常适合部署到 GitHub Pages。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;&lt;code&gt;with:&lt;/code&gt;&lt;/strong&gt;: 给 &lt;code&gt;actions-gh-pages&lt;/code&gt; 动作传递部署所需的参数：&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;&lt;code&gt;PERSONAL_TOKEN: ${{ secrets.TOKEN }}&lt;/code&gt;&lt;/strong&gt;: &lt;strong&gt;提供认证凭证&lt;/strong&gt;。这个动作需要权限去推送代码到目标仓库。这里使用的是你之前创建并存储在仓库 &lt;strong&gt;Secrets&lt;/strong&gt; 中的 &lt;strong&gt;Personal Access Token (PAT)&lt;/strong&gt;。&lt;code&gt;secrets.TOKEN&lt;/code&gt; 表示去读取名为 &lt;code&gt;TOKEN&lt;/code&gt; 的那个 Secret 的值。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;&lt;code&gt;EXTERNAL_REPOSITORY: letere-gz/hugo-dev&lt;/code&gt;&lt;/strong&gt;: &lt;strong&gt;指定目标仓库&lt;/strong&gt;。告诉动作要把 &lt;code&gt;public&lt;/code&gt; 目录下的文件推送到 &lt;code&gt;letere-gz&lt;/code&gt; 这个用户（或组织）下的 &lt;code&gt;hugo-dev&lt;/code&gt; 仓库。&lt;strong&gt;你需要将 &lt;code&gt;letere-gz/hugo-dev&lt;/code&gt; 替换成你自己的 GitHub 用户名和用于托管 GitHub Pages 的仓库名&lt;/strong&gt; (例如 &lt;code&gt;your-username/your-username.github.io&lt;/code&gt;)。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;&lt;code&gt;PUBLISH_BRANCH: main&lt;/code&gt;&lt;/strong&gt;: &lt;strong&gt;指定目标分支&lt;/strong&gt;。告诉动作要把文件推送到目标仓库的 &lt;code&gt;main&lt;/code&gt; 分支。&lt;strong&gt;你需要根据你的 GitHub Pages 设置，将其修改为正确的目标分支&lt;/strong&gt; (常见的有 &lt;code&gt;gh-pages&lt;/code&gt; 或 &lt;code&gt;main&lt;/code&gt;)。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;&lt;code&gt;PUBLISH_DIR: ./public&lt;/code&gt;&lt;/strong&gt;: &lt;strong&gt;指定要部署的内容来源&lt;/strong&gt;。告诉动作需要推送的是当前目录下 &lt;code&gt;public&lt;/code&gt; 文件夹里的所有内容。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;&lt;code&gt;commit_message: auto deploy&lt;/code&gt;&lt;/strong&gt;: &lt;strong&gt;设置部署时产生的 Git 提交信息&lt;/strong&gt;。每次部署都是一次 Git 提交，这里设置提交信息为 &amp;ldquo;auto deploy&amp;rdquo;。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;托勒斯法则&lt;/strong&gt;: 你只需要知道这个步骤负责把 &lt;code&gt;public&lt;/code&gt; 目录的内容，使用你提供的 Token 认证后，推送到你指定的目标仓库和分支。你不需要关心它内部是如何进行 Git 操作和推送的。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;hr&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;Author:&lt;br&gt;&#xA;URL: &lt;a href=&#34;http://example.org/posts/hugo%E5%8D%9A%E5%AE%A2/action-%E4%BB%A3%E7%A0%81%E6%88%91%E8%87%AA%E5%B7%B1%E5%86%99%E4%B8%8D%E6%9D%A5%E7%9A%84%E4%B8%8D%E7%94%A8ai%E7%9A%84%E6%83%85%E5%86%B5%E4%B8%8B%E9%9C%80%E8%A6%81steps%E5%AD%97%E6%AE%B5%E4%B8%8B%E7%9A%84users%E5%8F%82%E6%95%B0/&#34;target=&#34;_blank&#34; rel=&#34;external nofollow noopener noreferrer&#34;&gt;http://example.org/posts/hugo%E5%8D%9A%E5%AE%A2/action-%E4%BB%A3%E7%A0%81%E6%88%91%E8%87%AA%E5%B7%B1%E5%86%99%E4%B8%8D%E6%9D%A5%E7%9A%84%E4%B8%8D%E7%94%A8ai%E7%9A%84%E6%83%85%E5%86%B5%E4%B8%8B%E9%9C%80%E8%A6%81steps%E5%AD%97%E6%AE%B5%E4%B8%8B%E7%9A%84users%E5%8F%82%E6%95%B0/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;&#xA;</description>
    </item>
    <item>
      <title>hugo博客action代码部署：hugo博客的action代码本体</title>
      <link>/posts/hugo%E5%8D%9A%E5%AE%A2/hugo%E5%8D%9A%E5%AE%A2%E9%83%A8%E7%BD%B2%E7%9A%84action%E4%BB%A3%E7%A0%81%E6%9C%AC%E8%BA%AB/</link>
      <pubDate>Thu, 20 Feb 2025 20:14:22 +0800</pubDate>
      <guid>/posts/hugo%E5%8D%9A%E5%AE%A2/hugo%E5%8D%9A%E5%AE%A2%E9%83%A8%E7%BD%B2%E7%9A%84action%E4%BB%A3%E7%A0%81%E6%9C%AC%E8%BA%AB/</guid>
      <category domain="/categories/%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2/">项目部署</category>
      <description>&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;30&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;31&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;32&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;33&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;34&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;35&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;36&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;37&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;38&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;39&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;40&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;41&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;42&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;43&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;44&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;45&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;46&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;47&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;48&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;49&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;50&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;51&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;52&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;53&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;54&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;55&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;56&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;57&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;58&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;59&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;60&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;61&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;62&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c&#34;&gt;# 工作流名称&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;deploy&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# 触发工作流的事件&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;on&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;push&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;branches&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# 仅在 main 分支被推送时触发&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;- &lt;span class=&#34;l&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# 定义工作流中的作业&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;jobs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# 定义一个名为 deploy 的作业&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;deploy&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# 指定作业运行的环境为最新的 Ubuntu 系统&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;runs-on&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;ubuntu-latest&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# 定义作业中的步骤&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;steps&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# 步骤1：检出代码&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;Checkout&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# 使用官方的 actions/checkout 动作来获取仓库代码&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;uses&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;actions/checkout@v4&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;with&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# 获取完整的 Git 历史记录（对于部署工具 peaceiris/actions-gh-pages 可能需要）&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# 0 表示获取所有历史，而不是默认的浅克隆（只获取最后一次提交）&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;fetch-depth&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# 步骤2：设置 Hugo 环境&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;Setup Hugo&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# 使用社区维护的 peaceiris/actions-hugo 动作来安装 Hugo&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;uses&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;peaceiris/actions-hugo@v3&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;with&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# 指定要安装的 Hugo 版本为最新版&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;hugo-version&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;latest&amp;#39;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# 明确指定安装 Hugo 的 Extended 版本（支持 SASS/SCSS 等特性）&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;extended&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# 步骤3：构建网站&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;Build Web&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# 运行 Hugo 命令来生成静态网站文件&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# -D 参数表示包含草稿内容（如果本地预览用过，这里保持一致，或按需移除）&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;run&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;hugo -D&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# 步骤4：部署网站到 GitHub Pages&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;Deploy Web&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# 使用社区维护的 peaceiris/actions-gh-pages 动作来部署&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;uses&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;peaceiris/actions-gh-pages@v4&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;with&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# 指定用于认证的 Personal Access Token (PAT)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# ${{ secrets.TOKEN }} 会从仓库的 Secrets 中读取名为 TOKEN 的值&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# （视频中占位符是 你的token变量名，这里假设你设置为 TOKEN）&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;PERSONAL_TOKEN&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;${{ secrets.TOKEN }}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# 指定要将静态文件部署到的目标仓库&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# 格式为：你的GitHub用户名/目标仓库名&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# （视频中占位符是 你的github名/你的仓库名，这里假设目标仓库是 letere-gz/hugo-dev）&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;EXTERNAL_REPOSITORY&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;letere-gz/hugo-dev&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# 指定将静态文件推送到目标仓库的哪个分支（通常是 gh-pages 或 main）&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;PUBLISH_BRANCH&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# 指定包含构建好的静态网站文件的目录（Hugo 默认生成到 public）&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;PUBLISH_DIR&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;./public&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# 自定义部署时 Git 提交的信息&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;commit_message&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;auto deploy&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;</description>
    </item>
    <item>
      <title>使用github-action自动部署hugo博客到“page”仓库</title>
      <link>/posts/hugo%E5%8D%9A%E5%AE%A2/%E4%BD%BF%E7%94%A8github-action%E8%87%AA%E5%8A%A8%E9%83%A8%E7%BD%B2hugo%E5%8D%9A%E5%AE%A2%E5%88%B0page%E4%BB%93%E5%BA%93/</link>
      <pubDate>Thu, 20 Feb 2025 20:14:22 +0800</pubDate>
      <guid>/posts/hugo%E5%8D%9A%E5%AE%A2/%E4%BD%BF%E7%94%A8github-action%E8%87%AA%E5%8A%A8%E9%83%A8%E7%BD%B2hugo%E5%8D%9A%E5%AE%A2%E5%88%B0page%E4%BB%93%E5%BA%93/</guid>
      <category domain="/categories/%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2/">项目部署</category>
      <description>&lt;h2 id=&#34;part1-介绍-github-action-自动化部署-hugo-博客&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;part1: 介绍 GitHub Action 自动化部署 Hugo 博客&lt;/span&gt;&#xA;  &lt;a href=&#34;#part1-%e4%bb%8b%e7%bb%8d-github-action-%e8%87%aa%e5%8a%a8%e5%8c%96%e9%83%a8%e7%bd%b2-hugo-%e5%8d%9a%e5%ae%a2&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&lt;p&gt;(00:00-00:09) &lt;em&gt;&lt;strong&gt;1.1: 介绍目标&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;视频开篇展示了一个本地运行的 &lt;strong&gt;Hugo&lt;/strong&gt; 博客 (&lt;code&gt;localhost:1313&lt;/code&gt;)。&lt;/li&gt;&#xA;&lt;li&gt;目标是向大家介绍如何通过 &lt;strong&gt;GitHub&lt;/strong&gt; 的 &lt;strong&gt;GitHub Actions&lt;/strong&gt; 功能来&lt;strong&gt;自动部署&lt;/strong&gt;博客。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;(00:09-00:32) &lt;em&gt;&lt;strong&gt;1.2: 手动部署痛点与自动化优势&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;♈指出传统方式下，每次修改完文件后，都需要&lt;strong&gt;手动将生成&lt;/strong&gt;的 &lt;code&gt;public&lt;/code&gt; 文件夹&lt;strong&gt;上传&lt;/strong&gt;到服务器或托管平台，这个过程比较&lt;strong&gt;麻烦&lt;/strong&gt;。&lt;/li&gt;&#xA;&lt;li&gt;♈使用 &lt;strong&gt;GitHub Actions&lt;/strong&gt; 可以实现&lt;strong&gt;自动化&lt;/strong&gt;：&lt;strong&gt;自动&lt;/strong&gt;帮我们&lt;strong&gt;生成&lt;/strong&gt; &lt;code&gt;public&lt;/code&gt; 目录，并将其&lt;strong&gt;部署&lt;/strong&gt;到&lt;strong&gt;静态页面网站&lt;/strong&gt;（如 GitHub Pages）。&lt;/li&gt;&#xA;&lt;li&gt;♈&lt;strong&gt;优点&lt;/strong&gt;：只需&lt;strong&gt;提交代码&lt;/strong&gt; (&lt;code&gt;git push&lt;/code&gt;)，后续的&lt;strong&gt;构建&lt;/strong&gt;和&lt;strong&gt;部署&lt;/strong&gt;过程就能&lt;strong&gt;自动完成&lt;/strong&gt;，&lt;strong&gt;方便&lt;/strong&gt;很多。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;part2-创建-github-仓库并推送-hugo-源码&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;part2: 创建 GitHub 仓库并推送 Hugo 源码&lt;/span&gt;&#xA;  &lt;a href=&#34;#part2-%e5%88%9b%e5%bb%ba-github-%e4%bb%93%e5%ba%93%e5%b9%b6%e6%8e%a8%e9%80%81-hugo-%e6%ba%90%e7%a0%81&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&lt;p&gt;(00:32-00:41) &lt;em&gt;&lt;strong&gt;2.1: 创建仓库准备&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;要实现自动化部署，首先需要一个 &lt;strong&gt;GitHub 仓库&lt;/strong&gt;来存放 &lt;strong&gt;Hugo&lt;/strong&gt; 项目的&lt;strong&gt;主文件&lt;/strong&gt;（源代码）。&lt;/li&gt;&#xA;&lt;li&gt;操作：导航到 &lt;strong&gt;GitHub&lt;/strong&gt; 网站，准备&lt;strong&gt;创建&lt;/strong&gt;一个新的仓库。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;(00:41-01:12) &lt;em&gt;&lt;strong&gt;2.2: 创建私有仓库&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;在 GitHub 创建新仓库页面（经历短暂的网络卡顿后），设置仓库信息：&#xA;&lt;ul&gt;&#xA;&lt;li&gt;仓库名：&lt;code&gt;hugo-main&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;可见性：&lt;strong&gt;建议&lt;/strong&gt;选择&lt;strong&gt;私有（Private）&lt;/strong&gt;，因为源代码一般不需要公开。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;操作：点击 &lt;code&gt;Create repository&lt;/code&gt; 完成创建。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;(01:12-01:24) &lt;em&gt;&lt;strong&gt;2.3: 上传文件准备&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;仓库创建完成后，需要将本地的 &lt;strong&gt;Hugo&lt;/strong&gt; 项目文件&lt;strong&gt;上传&lt;/strong&gt;到这个新仓库。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;关键点&lt;/strong&gt;：上传前需要注意&lt;strong&gt;忽略&lt;/strong&gt;掉一些不需要版本控制的文件。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;(01:24-02:04) &lt;em&gt;&lt;strong&gt;2.4: 配置 .gitignore 忽略生成文件&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;说明&lt;/strong&gt;：&lt;strong&gt;Hugo&lt;/strong&gt; 项目中的某些文件/目录是&lt;strong&gt;自动生成的&lt;/strong&gt;，&lt;strong&gt;不应该&lt;/strong&gt;提交到源代码仓库，包括：&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;public/&lt;/code&gt;：&lt;strong&gt;Hugo&lt;/strong&gt; 生成的静态网站文件目录。&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;resources/&lt;/code&gt;：&lt;strong&gt;Hugo&lt;/strong&gt; 处理后的资源缓存目录。&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;hugo.build.lock&lt;/code&gt;：构建锁文件。&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;hugo.exe&lt;/code&gt;：（如果在 Windows 下）&lt;strong&gt;Hugo&lt;/strong&gt; 可执行文件本身。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;♈ &lt;strong&gt;操作&lt;/strong&gt;：在本地 Hugo 项目根目录下，&lt;strong&gt;创建&lt;/strong&gt;一个名为 &lt;code&gt;.gitignore&lt;/code&gt; 的文件。&lt;/li&gt;&#xA;&lt;li&gt;♈&lt;strong&gt;操作&lt;/strong&gt;：编辑 &lt;code&gt;.gitignore&lt;/code&gt; 文件，将上述需要忽略的文件名或目录名（如 &lt;code&gt;public&lt;/code&gt;, &lt;code&gt;resources&lt;/code&gt;, &lt;code&gt;hugo.build.lock&lt;/code&gt;, &lt;code&gt;hugo.exe&lt;/code&gt;）添加进去，每行一个。&lt;/li&gt;&#xA;&lt;li&gt;♈&lt;strong&gt;目的&lt;/strong&gt;：&lt;strong&gt;保证&lt;/strong&gt;上传到 &lt;strong&gt;GitHub&lt;/strong&gt; 的是&lt;strong&gt;最干净、最原始&lt;/strong&gt;的 Hugo 项目文件。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;(02:04-03:10) &lt;em&gt;&lt;strong&gt;2.5: Git 推送操作&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;操作&lt;/strong&gt;：在本地 Hugo 项目目录下打开&lt;strong&gt;命令行终端 (cmd)&lt;/strong&gt;。&lt;/li&gt;&#xA;&lt;li&gt;♈&lt;strong&gt;操作&lt;/strong&gt;：执行一系列 **Git 命令（仓库首页有）**来初始化仓库、添加文件并推送到远程 &lt;strong&gt;GitHub&lt;/strong&gt; 仓库：&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;git init&lt;/code&gt;：&lt;strong&gt;初始化&lt;/strong&gt;本地 Git 仓库。&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;git add .&lt;/code&gt;：&lt;strong&gt;添加&lt;/strong&gt;所有文件到暂存区（&lt;code&gt;.gitignore&lt;/code&gt; 会生效，忽略指定文件）。&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;git commit -m &amp;quot;first commit&amp;quot;&lt;/code&gt;：&lt;strong&gt;提交&lt;/strong&gt;更改。&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;git branch -M main&lt;/code&gt;：&lt;strong&gt;重命名&lt;/strong&gt;当前分支为 &lt;code&gt;main&lt;/code&gt;。&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;git remote add origin https://github.com/letere-gz/hugo-main.git&lt;/code&gt;：&lt;strong&gt;关联&lt;/strong&gt;远程仓库地址。&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;git push -u origin main&lt;/code&gt;：&lt;strong&gt;推送&lt;/strong&gt;本地 &lt;code&gt;main&lt;/code&gt; 分支到远程仓库。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;验证&lt;/strong&gt;：切换到 &lt;strong&gt;GitHub&lt;/strong&gt; 仓库页面刷新，确认项目文件已上传，且 &lt;code&gt;.gitignore&lt;/code&gt; 中指定的文件（如 &lt;code&gt;public&lt;/code&gt;）&lt;strong&gt;未被上传&lt;/strong&gt;。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;part3-配置-github-actions-workflow&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;part3: 配置 GitHub Actions Workflow&lt;/span&gt;&#xA;  &lt;a href=&#34;#part3-%e9%85%8d%e7%bd%ae-github-actions-workflow&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&lt;p&gt;(03:10-03:59) &lt;em&gt;&lt;strong&gt;3.1: 参考官方与民间方案&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;提及&lt;/strong&gt;：作者自己的博客 (&lt;code&gt;letere-gz.github.io/hugo-stack/&lt;/code&gt;) 提供了关于 &lt;strong&gt;Hugo + GitHub&lt;/strong&gt; 免费部署的教程文章。&lt;/li&gt;&#xA;&lt;li&gt;♈&lt;strong&gt;参考&lt;/strong&gt;：查看 &lt;strong&gt;Hugo 官方文档&lt;/strong&gt; (&lt;code&gt;gohugo.io&lt;/code&gt;) 中关于 &lt;code&gt;Hosting and deployment&lt;/code&gt; -&amp;gt; &lt;code&gt;Host on GitHub Pages&lt;/code&gt; 的部分。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;发现&lt;/strong&gt;：官方文档提供了一个使用 &lt;strong&gt;GitHub Actions&lt;/strong&gt; 部署的 &lt;strong&gt;workflow&lt;/strong&gt; 示例（&lt;code&gt;Step 6&lt;/code&gt; 中的 &lt;code&gt;hugo.yml&lt;/code&gt; 文件内容）。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;评价&lt;/strong&gt;：作者认为官方提供的 &lt;strong&gt;workflow&lt;/strong&gt; 文件内容&lt;strong&gt;很长&lt;/strong&gt;，配置起来可能有点&lt;strong&gt;麻烦&lt;/strong&gt;。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;(03:59-04:13) &lt;em&gt;&lt;strong&gt;3.2: 引入简化版 Workflow&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;建议&lt;/strong&gt;：作者推荐使用一个&lt;strong&gt;民间大佬（peaceiris）&lt;strong&gt;编写和维护的&lt;/strong&gt;简化版&lt;/strong&gt;的 &lt;strong&gt;GitHub Actions workflow&lt;/strong&gt; 配置。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;来源&lt;/strong&gt;：该简化配置可以在作者的教程文章中找到（或者直接参考 &lt;code&gt;peaceiris/actions-hugo&lt;/code&gt; 和 &lt;code&gt;peaceiris/actions-gh-pages&lt;/code&gt; 这两个 Action）。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;优势&lt;/strong&gt;：相比官方示例，这个版本&lt;strong&gt;更简洁、更方便&lt;/strong&gt;使用。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;(04:13-06:15) &lt;em&gt;&lt;strong&gt;3.3: 解析简化版 Workflow 配置&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;展示&lt;/strong&gt;：作者展示了其教程文章中的&lt;strong&gt;简化版 workflow YAML 文件&lt;/strong&gt;内容，并逐段解释其含义：&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;name: deploy&lt;/code&gt;: 定义 &lt;strong&gt;Workflow 的名称&lt;/strong&gt;，显示在 Actions 列表里。&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;on: push: branches: [ main ]&lt;/code&gt;: 设置&lt;strong&gt;触发条件&lt;/strong&gt;，当代码被 &lt;code&gt;push&lt;/code&gt; 到 &lt;code&gt;main&lt;/code&gt; 分支时，自动执行此 workflow。&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;jobs: deploy:&lt;/code&gt;: 定义一个名为 &lt;code&gt;deploy&lt;/code&gt; 的&lt;strong&gt;作业 (job)&lt;/strong&gt;。&lt;/li&gt;&#xA;&lt;li&gt;♈ &lt;code&gt;runs-on: ubuntu-latest&lt;/code&gt;: 指定该作业运行在 &lt;strong&gt;GitHub&lt;/strong&gt; 提供的最新版 &lt;strong&gt;Ubuntu&lt;/strong&gt; 虚拟环境上。&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;steps:&lt;/code&gt;: 定义该作业包含的一系列&lt;strong&gt;步骤 (step)&lt;/strong&gt;。&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;- name: Checkout&lt;/code&gt;: 步骤名称。&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;uses: actions/checkout@v4&lt;/code&gt;: 使用官方提供的 &lt;code&gt;checkout&lt;/code&gt; &lt;strong&gt;Action&lt;/strong&gt;，将&lt;strong&gt;仓库代码&lt;/strong&gt;下载到运行环境中。&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;with: fetch-depth: 0&lt;/code&gt;: &lt;strong&gt;获取&lt;/strong&gt;完整的 Git 历史记录（对于 Hugo 可能需要）。&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;- name: Setup Hugo&lt;/code&gt;: 步骤名称。&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;uses: peaceiris/actions-hugo@v3&lt;/code&gt;: 使用 &lt;code&gt;peaceiris&lt;/code&gt; 提供的 &lt;code&gt;actions-hugo&lt;/code&gt; &lt;strong&gt;Action&lt;/strong&gt; 来&lt;strong&gt;安装和设置 Hugo 环境&lt;/strong&gt;。&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;with: hugo-version: &#39;latest&#39;, extended: true&lt;/code&gt;: 配置 &lt;code&gt;actions-hugo&lt;/code&gt;，指定安装&lt;strong&gt;最新 (latest)&lt;/strong&gt; 版本的 Hugo，并且是&lt;strong&gt;扩展 (extended)&lt;/strong&gt; 版本（支持 Sass/SCSS）。&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;- name: Build Web&lt;/code&gt;: 步骤名称。&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;run: hugo -D&lt;/code&gt;: &lt;strong&gt;执行 Hugo 命令&lt;/strong&gt; (&lt;code&gt;hugo&lt;/code&gt; 默认会构建，&lt;code&gt;-D&lt;/code&gt; 表示包含草稿内容，但在部署时通常不需要 &lt;code&gt;-D&lt;/code&gt;，作者这里可能写错了，通常只用 &lt;code&gt;hugo&lt;/code&gt;)，&lt;strong&gt;生成静态网站文件&lt;/strong&gt;到 &lt;code&gt;public&lt;/code&gt; 目录。&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;- name: Deploy Web&lt;/code&gt;: 步骤名称。&lt;/li&gt;&#xA;&lt;li&gt;♈ &lt;code&gt;uses: peaceiris/actions-gh-pages@v4&lt;/code&gt;: 使用 &lt;code&gt;peaceiris&lt;/code&gt; 提供的 &lt;code&gt;actions-gh-pages&lt;/code&gt; &lt;strong&gt;Action&lt;/strong&gt;，将构建好的网站&lt;strong&gt;部署到 GitHub Pages&lt;/strong&gt;。&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;with:&lt;/code&gt;: 配置 &lt;code&gt;actions-gh-pages&lt;/code&gt;。&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;PERSONAL_TOKEN: ${{ secrets.你的token变量名 }}&lt;/code&gt;: &lt;strong&gt;关键配置&lt;/strong&gt;，用于&lt;strong&gt;授权&lt;/strong&gt; Action 推送代码到目标仓库。需要一个&lt;strong&gt;个人访问令牌 (PAT)&lt;/strong&gt;，并将其存储为仓库的 &lt;strong&gt;Secret&lt;/strong&gt;。&lt;code&gt;你的token变量名&lt;/code&gt; 需要替换成实际设置的 &lt;strong&gt;Secret 名称&lt;/strong&gt;。&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;EXTERNAL_REPOSITORY: 你的github名/你的仓库名&lt;/code&gt;: &lt;strong&gt;关键配置&lt;/strong&gt;，指定&lt;strong&gt;目标仓库&lt;/strong&gt;，即用来&lt;strong&gt;托管 GitHub Pages 的仓库地址&lt;/strong&gt;（例如 &lt;code&gt;letere-gz/hugo-dev&lt;/code&gt;），&lt;strong&gt;必须修改&lt;/strong&gt;为用户自己的 Pages 仓库。&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;PUBLISH_BRANCH: main&lt;/code&gt;: 指定将 &lt;code&gt;public&lt;/code&gt; 目录的内容推送到&lt;strong&gt;目标仓库&lt;/strong&gt;的哪个&lt;strong&gt;分支&lt;/strong&gt;（通常是 &lt;code&gt;gh-pages&lt;/code&gt; 或 &lt;code&gt;main&lt;/code&gt;，取决于 Pages 设置）。&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;PUBLISH_DIR: ./public&lt;/code&gt;: 指定要&lt;strong&gt;发布&lt;/strong&gt;的&lt;strong&gt;目录&lt;/strong&gt;，即 Hugo 构建生成的 &lt;code&gt;public&lt;/code&gt; 目录。&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;commit_message: auto deploy&lt;/code&gt;: &lt;strong&gt;自动部署&lt;/strong&gt;时 Git 提交的&lt;strong&gt;消息&lt;/strong&gt;。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;part4-创建和配置-personal-access-token-pat&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;part4: 创建和配置 Personal Access Token (PAT)&lt;/span&gt;&#xA;  &lt;a href=&#34;#part4-%e5%88%9b%e5%bb%ba%e5%92%8c%e9%85%8d%e7%bd%ae-personal-access-token-pat&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&lt;p&gt;(06:15-06:49) &lt;em&gt;&lt;strong&gt;4.1: Token 的作用与必要性&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;重申&lt;/strong&gt;：Workflow 中的 &lt;code&gt;PERSONAL_TOKEN&lt;/code&gt; 参数需要填入一个&lt;strong&gt;个人访问令牌 (PAT)&lt;/strong&gt;。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;目的&lt;/strong&gt;：这个 Token 用于&lt;strong&gt;身份验证&lt;/strong&gt;，使得 &lt;strong&gt;GitHub Actions&lt;/strong&gt; 有权限将构建好的静态文件推送到&lt;strong&gt;目标 GitHub Pages 仓库&lt;/strong&gt;。没有它，推送会因权限不足而失败。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;操作准备&lt;/strong&gt;：接下来演示如何生成这个 Token。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;(06:49-08:09) &lt;em&gt;&lt;strong&gt;4.2: 生成 Personal Access Token (Classic)&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;操作路径&lt;/strong&gt;：在 &lt;strong&gt;GitHub&lt;/strong&gt; 页面，点击右上角个人头像 -&amp;gt; &lt;code&gt;Settings&lt;/code&gt; -&amp;gt; 左侧菜单滚动到底部找到 &lt;code&gt;Developer settings&lt;/code&gt; -&amp;gt; &lt;code&gt;Personal access tokens&lt;/code&gt; -&amp;gt; &lt;code&gt;Tokens (classic)&lt;/code&gt;。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;操作&lt;/strong&gt;：点击 &lt;code&gt;Generate new token&lt;/code&gt; 按钮，选择 &lt;code&gt;Generate new token (classic)&lt;/code&gt;。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;配置 Token&lt;/strong&gt;：&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;Note&lt;/code&gt;：给 Token 起一个&lt;strong&gt;描述性名称&lt;/strong&gt;，例如 “用作部署”。&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;Expiration&lt;/code&gt;：设置&lt;strong&gt;过期时间&lt;/strong&gt;。作者&lt;strong&gt;建议选择 &lt;code&gt;No expiration&lt;/code&gt;（永不过期）&lt;/strong&gt;，理由是避免定期更新 Token 的麻烦。&lt;strong&gt;但也提示&lt;/strong&gt; GitHub 出于&lt;strong&gt;安全&lt;/strong&gt;考虑&lt;strong&gt;建议&lt;/strong&gt;设置过期时间。对于个人私有仓库，作者认为永不过期问题不大。&#xA;♈*   &lt;code&gt;Select scopes&lt;/code&gt;：选择 Token 的&lt;strong&gt;权限范围&lt;/strong&gt;。&lt;strong&gt;必须勾选&lt;/strong&gt;以下两项：&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;repo&lt;/code&gt;：授予对仓库的完全控制权（包括推送）。&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;workflow&lt;/code&gt;：授予更新 GitHub Actions workflow 的权限。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;生成&lt;/strong&gt;：点击页面底部的 &lt;code&gt;Generate token&lt;/code&gt; 按钮。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;(08:09-08:41) &lt;em&gt;&lt;strong&gt;4.3: 保存 Token&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;♈ &lt;strong&gt;重要提示&lt;/strong&gt;：Token 生成后，&lt;strong&gt;完整的 Token 字符串&lt;/strong&gt;只会&lt;strong&gt;显示这一次&lt;/strong&gt;。&lt;strong&gt;必须立即复制&lt;/strong&gt; (&lt;code&gt;Copy&lt;/code&gt; 按钮) 并将其&lt;strong&gt;保存&lt;/strong&gt;在安全的地方（例如，作者将其粘贴到了本地的记事本文件中）。如果关闭或刷新页面，将&lt;strong&gt;无法再次查看&lt;/strong&gt;完整的 Token。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;(08:41-10:19) &lt;em&gt;&lt;strong&gt;4.4: 配置 Repository Secret&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;♈ &lt;strong&gt;目的&lt;/strong&gt;：将生成的 Token 安全地提供给 &lt;strong&gt;GitHub Actions workflow&lt;/strong&gt; 使用。&lt;strong&gt;不应该&lt;/strong&gt;直接将 Token 字符串写入 YAML 文件。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;操作路径&lt;/strong&gt;：回到&lt;strong&gt;存放 Hugo 源代码&lt;/strong&gt;的仓库（即 &lt;code&gt;hugo-main&lt;/code&gt;），进入该仓库的 &lt;code&gt;Settings&lt;/code&gt; -&amp;gt; 左侧菜单 &lt;code&gt;Security&lt;/code&gt; 下的 &lt;code&gt;Secrets and variables&lt;/code&gt; -&amp;gt; &lt;code&gt;Actions&lt;/code&gt;。&lt;/li&gt;&#xA;&lt;li&gt;♈&lt;strong&gt;操作&lt;/strong&gt;：点击 &lt;code&gt;New repository secret&lt;/code&gt; 按钮。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;配置 Secret&lt;/strong&gt;：&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;Name&lt;/code&gt;：输入 &lt;strong&gt;Secret 的名称&lt;/strong&gt;。这个名称&lt;strong&gt;必须&lt;/strong&gt;与 workflow YAML 文件中 &lt;code&gt;secrets.&lt;/code&gt; 后面引用的名称&lt;strong&gt;完全一致&lt;/strong&gt;。作者在这里将其命名为 &lt;code&gt;TOKEN&lt;/code&gt;。&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;Secret&lt;/code&gt;：将刚才&lt;strong&gt;复制并保存&lt;/strong&gt;的&lt;strong&gt;完整 Token 字符串&lt;/strong&gt;粘贴到这里。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;保存&lt;/strong&gt;：点击 &lt;code&gt;Add secret&lt;/code&gt;。&lt;/li&gt;&#xA;&lt;li&gt;♈&lt;strong&gt;优点&lt;/strong&gt;：使用 &lt;strong&gt;Secrets&lt;/strong&gt; 可以&lt;strong&gt;隐藏&lt;/strong&gt;敏感信息，workflow 运行时会安全地注入该值，比硬编码在代码中&lt;strong&gt;安全&lt;/strong&gt;得多。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;part5-演示自动化部署流程&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;part5: 演示自动化部署流程&lt;/span&gt;&#xA;  &lt;a href=&#34;#part5-%e6%bc%94%e7%a4%ba%e8%87%aa%e5%8a%a8%e5%8c%96%e9%83%a8%e7%bd%b2%e6%b5%81%e7%a8%8b&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&lt;p&gt;(10:19-10:31) &lt;em&gt;&lt;strong&gt;5.1: 准备 workflow 文件&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;操作&lt;/strong&gt;：回到本地的 Hugo 项目目录（&lt;code&gt;dev&lt;/code&gt; 目录）。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;下一步&lt;/strong&gt;：需要将包含 workflow 配置的 YAML 文件添加到项目中。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;(10:31-11:29) &lt;em&gt;&lt;strong&gt;5.2: 创建并编辑 workflow 文件&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;♈&lt;strong&gt;操作&lt;/strong&gt;：在本地 Hugo 项目根目录下，&lt;strong&gt;创建&lt;/strong&gt; &lt;code&gt;.github&lt;/code&gt; 文件夹，然后在 &lt;code&gt;.github&lt;/code&gt; 文件夹内&lt;strong&gt;创建&lt;/strong&gt; &lt;code&gt;workflows&lt;/code&gt; 文件夹。&lt;/li&gt;&#xA;&lt;li&gt;♈&lt;strong&gt;操作&lt;/strong&gt;：在 &lt;code&gt;workflows&lt;/code&gt; 文件夹中，&lt;strong&gt;新建&lt;/strong&gt;一个 &lt;strong&gt;YAML 文件&lt;/strong&gt;，作者将其命名为 &lt;code&gt;hugo_deploy.yaml&lt;/code&gt;。&lt;/li&gt;&#xA;&lt;li&gt;♈&lt;strong&gt;操作&lt;/strong&gt;：使用文本编辑器打开 &lt;code&gt;hugo_deploy.yaml&lt;/code&gt; 文件，将之前从教程文章中&lt;strong&gt;复制&lt;/strong&gt;的&lt;strong&gt;简化版 workflow&lt;/strong&gt; 内容&lt;strong&gt;粘贴&lt;/strong&gt;进去。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;(11:29-11:57) &lt;em&gt;&lt;strong&gt;5.3: 修改 workflow 文件参数&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;操作&lt;/strong&gt;：在粘贴好的 workflow 内容中，&lt;strong&gt;修改&lt;/strong&gt;两个关键的 &lt;code&gt;with&lt;/code&gt; 参数：&#xA;&lt;ul&gt;&#xA;&lt;li&gt;♈将 &lt;code&gt;PERSONAL_TOKEN: ${{ secrets.你的token变量名 }}&lt;/code&gt; 修改为 &lt;code&gt;PERSONAL_TOKEN: ${{ secrets.TOKEN }}&lt;/code&gt;，确保 &lt;code&gt;TOKEN&lt;/code&gt; 与上一步创建的 &lt;strong&gt;Repository Secret 名称&lt;/strong&gt;一致。&lt;/li&gt;&#xA;&lt;li&gt;♈ 将 &lt;code&gt;EXTERNAL_REPOSITORY: 你的github名/你的仓库名&lt;/code&gt; 修改为&lt;strong&gt;实际的 GitHub Pages 目标仓库地址&lt;/strong&gt;，作者修改为 &lt;code&gt;letere-gz/hugo-dev&lt;/code&gt;。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;保存&lt;/strong&gt;：保存对 &lt;code&gt;hugo_deploy.yaml&lt;/code&gt; 文件的修改。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;(11:57-12:47) &lt;em&gt;&lt;strong&gt;5.4: 创建新文章验证部署&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;目的&lt;/strong&gt;：为了验证&lt;strong&gt;推送到 &lt;code&gt;main&lt;/code&gt; 分支&lt;/strong&gt;是否能&lt;strong&gt;自动触发部署&lt;/strong&gt;，需要对项目做一些更改，例如&lt;strong&gt;添加一篇新文章&lt;/strong&gt;。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;现状&lt;/strong&gt;：先查看本地 (&lt;code&gt;localhost:1313&lt;/code&gt;) 运行的博客，确认当前的文章列表（只有一个 &amp;ldquo;Chinese Test&amp;rdquo;）。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;(12:47-13:22) &lt;em&gt;&lt;strong&gt;5.5: 本地新增文章&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;操作&lt;/strong&gt;：在命令行中，执行 &lt;code&gt;hugo new content post/newnewnew/index.md&lt;/code&gt; 命令，在 &lt;code&gt;content/post&lt;/code&gt; 目录下创建一个名为 &lt;code&gt;newnewnew&lt;/code&gt; 的子目录，并在其中生成 &lt;code&gt;index.md&lt;/code&gt; 文件。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;操作&lt;/strong&gt;：再次执行 &lt;code&gt;hugo server -D&lt;/code&gt; 启动本地服务。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;验证&lt;/strong&gt;：访问 &lt;code&gt;localhost:1313&lt;/code&gt;，确认名为 &lt;code&gt;Newnewnew&lt;/code&gt; 的新文章已成功创建并显示在本地博客首页。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;(13:22-14:03) &lt;em&gt;&lt;strong&gt;5.6: 推送更改触发 Action&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;操作&lt;/strong&gt;：在命令行中按 &lt;code&gt;Ctrl+C&lt;/code&gt; &lt;strong&gt;停止&lt;/strong&gt;本地 &lt;code&gt;hugo server&lt;/code&gt;。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;操作&lt;/strong&gt;：执行 &lt;strong&gt;Git 命令&lt;/strong&gt;将更改推送到远程仓库：&#xA;♈*   &lt;code&gt;git add .&lt;/code&gt;：&lt;strong&gt;添加&lt;/strong&gt;所有更改（包括新文章 &lt;code&gt;.md&lt;/code&gt; 文件和 &lt;code&gt;.github/workflows/hugo_deploy.yaml&lt;/code&gt; 文件）。&#xA;♈*   &lt;code&gt;git commit -m &amp;quot;update&amp;quot;&lt;/code&gt;：&lt;strong&gt;提交&lt;/strong&gt;更改，提交信息为 &amp;ldquo;update&amp;rdquo;。&#xA;♈*   &lt;code&gt;git push&lt;/code&gt;：&lt;strong&gt;推送&lt;/strong&gt;本地 &lt;code&gt;main&lt;/code&gt; 分支的提交到 &lt;strong&gt;GitHub&lt;/strong&gt; 上的 &lt;code&gt;hugo-main&lt;/code&gt; 仓库。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;part6-验证自动化部署结果与总结&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;part6: 验证自动化部署结果与总结&lt;/span&gt;&#xA;  &lt;a href=&#34;#part6-%e9%aa%8c%e8%af%81%e8%87%aa%e5%8a%a8%e5%8c%96%e9%83%a8%e7%bd%b2%e7%bb%93%e6%9e%9c%e4%b8%8e%e6%80%bb%e7%bb%93&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&lt;p&gt;(14:03-14:29) &lt;em&gt;&lt;strong&gt;6.1: 观察 Action 执行&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;操作&lt;/strong&gt;：切换回 &lt;strong&gt;GitHub&lt;/strong&gt; 网站，进入 &lt;code&gt;hugo-main&lt;/code&gt; 仓库的 &lt;code&gt;Actions&lt;/code&gt; 标签页。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;观察&lt;/strong&gt;：可以看到一个由刚才的 &lt;code&gt;push&lt;/code&gt; 事件触发的名为 &lt;code&gt;update&lt;/code&gt;（commit 信息）的 &lt;strong&gt;workflow run&lt;/strong&gt; 正在执行（黄色图标，&lt;code&gt;in progress&lt;/code&gt;）或者已经执行完毕（绿色勾，&lt;code&gt;Success&lt;/code&gt;）。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;检查&lt;/strong&gt;：点击该 workflow run，可以查看名为 &lt;code&gt;deploy&lt;/code&gt; 的 job，再点击进去可以看到详细的&lt;strong&gt;执行步骤和日志&lt;/strong&gt;，确认 &lt;code&gt;Checkout&lt;/code&gt;, &lt;code&gt;Setup Hugo&lt;/code&gt;, &lt;code&gt;Build Web&lt;/code&gt;, &lt;code&gt;Deploy Web&lt;/code&gt; 等步骤均已&lt;strong&gt;成功完成&lt;/strong&gt;。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;(14:29-14:53) &lt;em&gt;&lt;strong&gt;6.2: 验证部署结果（首次刷新）&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;操作&lt;/strong&gt;：打开或刷新用于 &lt;strong&gt;GitHub Pages&lt;/strong&gt; 托管的&lt;strong&gt;目标网站&lt;/strong&gt;（作者的是 &lt;code&gt;https://letere-gz.github.io/hugo-dev/&lt;/code&gt;）。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;发现&lt;/strong&gt;：&lt;strong&gt;第一次刷新&lt;/strong&gt;时，页面上可能&lt;strong&gt;仍然没有&lt;/strong&gt;显示新添加的文章 &lt;code&gt;Newnewnew&lt;/code&gt;。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;原因&lt;/strong&gt;：&lt;strong&gt;GitHub Pages&lt;/strong&gt; 的部署和 &lt;strong&gt;CDN 的缓存更新&lt;/strong&gt;通常会有一定的&lt;strong&gt;延迟&lt;/strong&gt;。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;(14:53-15:10) &lt;em&gt;&lt;strong&gt;6.3: 验证部署结果（成功显示）&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;操作&lt;/strong&gt;：&lt;strong&gt;再次刷新&lt;/strong&gt; GitHub Pages 网站页面。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;结果&lt;/strong&gt;：新添加的文章 &lt;code&gt;Newnewnew&lt;/code&gt; &lt;strong&gt;成功出现在了&lt;/strong&gt;部署后的网站首页上。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;结论&lt;/strong&gt;：这表明 &lt;strong&gt;GitHub Actions&lt;/strong&gt; 已经成功地&lt;strong&gt;自动拉取&lt;/strong&gt;了 &lt;code&gt;hugo-main&lt;/code&gt; 仓库的最新代码，使用 &lt;strong&gt;Hugo&lt;/strong&gt; 进行了&lt;strong&gt;构建&lt;/strong&gt;，并将生成的 &lt;code&gt;public&lt;/code&gt; 目录内容&lt;strong&gt;推送并部署&lt;/strong&gt;到了 &lt;code&gt;hugo-dev&lt;/code&gt; 这个 &lt;strong&gt;GitHub Pages&lt;/strong&gt; 仓库。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;(15:10-15:40) &lt;em&gt;&lt;strong&gt;6.4: 总结与结束&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;总结&lt;/strong&gt;：通过以上设置，现在实现了&lt;strong&gt;自动化部署流程&lt;/strong&gt;。开发者只需专注于&lt;strong&gt;编写文章&lt;/strong&gt; (&lt;code&gt;.md&lt;/code&gt; 文件)，完成后执行 &lt;code&gt;git push&lt;/code&gt; 将代码推送到源仓库 (&lt;code&gt;hugo-main&lt;/code&gt;)。&lt;strong&gt;GitHub Actions&lt;/strong&gt; 就会&lt;strong&gt;自动接管&lt;/strong&gt;后续的&lt;strong&gt;构建和部署&lt;/strong&gt;工作，&lt;strong&gt;无需再手动&lt;/strong&gt;处理 &lt;code&gt;public&lt;/code&gt; 目录的生成和上传。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;评价&lt;/strong&gt;：整个过程变得非常&lt;strong&gt;方便和省心&lt;/strong&gt;。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;</description>
    </item>
    <item>
      <title>搭建本地hugo博客</title>
      <link>/posts/hugo%E5%8D%9A%E5%AE%A2/%E6%90%AD%E5%BB%BA%E6%9C%AC%E5%9C%B0hugo%E5%8D%9A%E5%AE%A2/</link>
      <pubDate>Thu, 20 Feb 2025 20:14:22 +0800</pubDate>
      <guid>/posts/hugo%E5%8D%9A%E5%AE%A2/%E6%90%AD%E5%BB%BA%E6%9C%AC%E5%9C%B0hugo%E5%8D%9A%E5%AE%A2/</guid>
      <category domain="/categories/%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2/">项目部署</category>
      <description>&lt;h2 id=&#34;part1-hugo--github-免费部署自己的博客介绍&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;part1: Hugo + GitHub 免费部署自己的博客介绍&lt;/span&gt;&#xA;  &lt;a href=&#34;#part1-hugo--github-%e5%85%8d%e8%b4%b9%e9%83%a8%e7%bd%b2%e8%87%aa%e5%b7%b1%e7%9a%84%e5%8d%9a%e5%ae%a2%e4%bb%8b%e7%bb%8d&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&lt;p&gt;(00:00-00:15) &lt;em&gt;&lt;strong&gt;1.1: 视频目标与演示&lt;/strong&gt;&lt;/em&gt;&#xA;视频旨在分享如何使用 &lt;strong&gt;Hugo&lt;/strong&gt; 和 &lt;strong&gt;GitHub&lt;/strong&gt; &lt;strong&gt;免费部署&lt;/strong&gt;一个属于自己的&lt;strong&gt;个人博客&lt;/strong&gt;。开头展示了作者已经&lt;strong&gt;部署成功&lt;/strong&gt;的博客页面作为最终效果预览。&lt;/p&gt;&#xA;&lt;p&gt;(00:15-00:37) &lt;em&gt;&lt;strong&gt;1.2: 作者说明与目的&lt;/strong&gt;&lt;/em&gt;&#xA;作者声明自己并非专业的教学视频制作者，制作此视频主要是因为近期想更新内容，且正好在研究 &lt;strong&gt;Hugo&lt;/strong&gt; 博客的搭建过程。目的是分享经验，帮助观看者在搭建过程中&lt;strong&gt;少走弯路&lt;/strong&gt;。&lt;/p&gt;&#xA;&lt;p&gt;(00:37-00:44) &lt;em&gt;&lt;strong&gt;1.3: 博客内容示例&lt;/strong&gt;&lt;/em&gt;&#xA;简要展示了博客中的一篇文章，内容即为本次视频所要讲解的 &lt;strong&gt;Hugo + GitHub 免费部署博客&lt;/strong&gt;的&lt;strong&gt;教程记录&lt;/strong&gt;。&lt;/p&gt;&#xA;&lt;h2 id=&#34;part2-搭建动机与-hugo-vs-hexo-对比&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;part2: 搭建动机与 Hugo vs Hexo 对比&lt;/span&gt;&#xA;  &lt;a href=&#34;#part2-%e6%90%ad%e5%bb%ba%e5%8a%a8%e6%9c%ba%e4%b8%8e-hugo-vs-hexo-%e5%af%b9%e6%af%94&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&lt;p&gt;(00:45-00:57) &lt;em&gt;&lt;strong&gt;2.1: 历史背景 (Hexo)&lt;/strong&gt;&lt;/em&gt;&#xA;作者提到自己之前已经使用 &lt;strong&gt;Hexo&lt;/strong&gt; 框架搭建过一个&lt;strong&gt;个人博客&lt;/strong&gt; (展示了之前的 Hexo 博客页面)。&lt;/p&gt;&#xA;&lt;p&gt;(00:57-01:19) &lt;em&gt;&lt;strong&gt;2.2: 转向 Hugo 的原因&lt;/strong&gt;&lt;/em&gt;&#xA;解释了为何选择使用 &lt;strong&gt;Hugo&lt;/strong&gt; 重新搭建：更换了新电脑 (&lt;strong&gt;天选4&lt;/strong&gt;) 后，之前的 &lt;strong&gt;Hexo&lt;/strong&gt; 本地文件丢失（因为&lt;strong&gt;没有上传备份到 GitHub&lt;/strong&gt;），所以需要重新搭建。借此机会研究并尝试了 &lt;strong&gt;Hugo&lt;/strong&gt;。&lt;/p&gt;&#xA;&lt;p&gt;(01:19-01:30) &lt;em&gt;&lt;strong&gt;2.3: Hugo 使用体验&lt;/strong&gt;&lt;/em&gt;&#xA;作者认为实际使用下来，&lt;strong&gt;Hugo&lt;/strong&gt; &lt;strong&gt;感觉&lt;/strong&gt;比 &lt;strong&gt;Hexo&lt;/strong&gt; &lt;strong&gt;更方便&lt;/strong&gt;。&lt;/p&gt;&#xA;&lt;p&gt;(01:30-01:41) &lt;em&gt;&lt;strong&gt;2.4: 对新手的建议 (Hugo vs Hexo)&lt;/strong&gt;&lt;/em&gt;&#xA;指出 &lt;strong&gt;Hugo&lt;/strong&gt; 的官方文档&lt;strong&gt;基本都是英文&lt;/strong&gt;，可能对新手不太友好。因此，&lt;strong&gt;推荐新手&lt;/strong&gt;优先尝试 &lt;strong&gt;Hexo&lt;/strong&gt; (文档相对更完善，中文资源多)。使用 Hugo 需要&lt;strong&gt;啃英文文档&lt;/strong&gt;，对新手来说较为&lt;strong&gt;麻烦&lt;/strong&gt;。&lt;/p&gt;&#xA;&lt;h2 id=&#34;part3-下载-hugo&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;part3: 下载 Hugo&lt;/span&gt;&#xA;  &lt;a href=&#34;#part3-%e4%b8%8b%e8%bd%bd-hugo&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&lt;p&gt;(01:41-01:54) &lt;em&gt;&lt;strong&gt;3.1: 开始教程：下载准备&lt;/strong&gt;&lt;/em&gt;&#xA;正式进入教程环节，第一步是&lt;strong&gt;下载 Hugo&lt;/strong&gt;。作者打开浏览器并搜索 &lt;strong&gt;Hugo&lt;/strong&gt;。&lt;/p&gt;&#xA;&lt;p&gt;(01:54-02:22) &lt;em&gt;&lt;strong&gt;3.2: 定位 Hugo GitHub Releases&lt;/strong&gt;&lt;/em&gt;&#xA;进入 &lt;strong&gt;Hugo&lt;/strong&gt; 官网 (&lt;strong&gt;gohugo.io&lt;/strong&gt;)，点击 &lt;strong&gt;GitHub&lt;/strong&gt; 链接跳转到 &lt;strong&gt;Hugo&lt;/strong&gt; 的 &lt;strong&gt;GitHub 仓库&lt;/strong&gt;。在仓库页面，点击 &lt;code&gt;Tags&lt;/code&gt; (标签/版本) 来查找发布版本。选择了当时的最新版本 &lt;strong&gt;v0.131.0&lt;/strong&gt;。&lt;/p&gt;&#xA;&lt;p&gt;(02:22-02:30) &lt;em&gt;&lt;strong&gt;3.3: 选择并下载 Hugo Extended 版本&lt;/strong&gt;&lt;/em&gt;&#xA;在版本发布页面向下滚动到 &lt;code&gt;Assets&lt;/code&gt; (资源) 部分，强调需要下载 &lt;strong&gt;Extended&lt;/strong&gt; (扩展) 版本，并选择了适用于 Windows 64位的 &lt;code&gt;hugo_extended_0.131.0_windows-amd64.zip&lt;/code&gt; 文件进行&lt;strong&gt;下载&lt;/strong&gt;。&lt;/p&gt;&#xA;&lt;h2 id=&#34;part4-hugo-文件准备与站点创建&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;part4: Hugo 文件准备与站点创建&lt;/span&gt;&#xA;  &lt;a href=&#34;#part4-hugo-%e6%96%87%e4%bb%b6%e5%87%86%e5%a4%87%e4%b8%8e%e7%ab%99%e7%82%b9%e5%88%9b%e5%bb%ba&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&lt;p&gt;(02:30-02:55) &lt;em&gt;&lt;strong&gt;4.1: 解压 Hugo 文件&lt;/strong&gt;&lt;/em&gt;&#xA;展示了下载好的 &lt;strong&gt;zip 压缩包&lt;/strong&gt;。在桌面上创建了一个名为 &lt;code&gt;test&lt;/code&gt; 的新文件夹。将下载的 &lt;strong&gt;zip 包&lt;/strong&gt;移动到 &lt;code&gt;test&lt;/code&gt; 文件夹中，并进行&lt;strong&gt;解压&lt;/strong&gt;。解压后得到包含 &lt;code&gt;hugo.exe&lt;/code&gt; 等文件的文件夹。&lt;/p&gt;&#xA;&lt;p&gt;(02:55-03:04) &lt;em&gt;&lt;strong&gt;4.2: Hugo 可执行文件说明&lt;/strong&gt;&lt;/em&gt;&#xA;强调 &lt;strong&gt;Hugo&lt;/strong&gt; 是用 &lt;strong&gt;Go&lt;/strong&gt; 语言编写的，但使用时&lt;strong&gt;不需要单独安装 Go 环境&lt;/strong&gt;，♈下载解压后的 &lt;code&gt;hugo.exe&lt;/code&gt; &lt;strong&gt;可执行文件&lt;/strong&gt;即可直接使用，这一点很方便。清理了多余的文件和文件夹，只保留核心文件。&lt;/p&gt;&#xA;&lt;p&gt;(03:04-03:13) &lt;em&gt;&lt;strong&gt;4.3: 打开命令行工具 (CMD)&lt;/strong&gt;&lt;/em&gt;&#xA;在包含 &lt;code&gt;hugo.exe&lt;/code&gt; 的文件夹（路径类似 &lt;code&gt;C:\Users\Letere\Desktop\test\hugo_extended_0.131.0_windows-amd64&lt;/code&gt;）的&lt;strong&gt;地址栏&lt;/strong&gt;输入 &lt;code&gt;cmd&lt;/code&gt; 并回车，从而&lt;strong&gt;直接在该目录下打开命令行窗口&lt;/strong&gt;。&lt;/p&gt;&#xA;&lt;p&gt;(03:13-03:34) &lt;em&gt;&lt;strong&gt;4.4: 创建新站点命令 (&lt;code&gt;hugo new site&lt;/code&gt;)&lt;/strong&gt;&lt;/em&gt;&#xA;在命令行窗口中，♈输入命令 &lt;strong&gt;&lt;code&gt;hugo new site dev&lt;/code&gt;&lt;/strong&gt;。该命令会创建一个名为 &lt;code&gt;dev&lt;/code&gt; 的新文件夹，并在其中♈♈生成 &lt;strong&gt;Hugo 站点&lt;/strong&gt;的&lt;strong&gt;基本目录结构&lt;/strong&gt;。&lt;/p&gt;&#xA;&lt;p&gt;(03:34-03:45) &lt;em&gt;&lt;strong&gt;4.5: 理解命令输出与后续步骤&lt;/strong&gt;&lt;/em&gt;&#xA;展示了 &lt;strong&gt;&lt;code&gt;hugo new site&lt;/code&gt;&lt;/strong&gt; 命令执行后的&lt;strong&gt;输出提示&lt;/strong&gt;，其中包含了建议的后续操作步骤，如切换目录、安装主题、编辑配置、创建内容和启动服务。作者&lt;strong&gt;截图保存&lt;/strong&gt;了这些步骤提示。&lt;/p&gt;&#xA;&lt;p&gt;(03:45-04:10) &lt;em&gt;&lt;strong&gt;4.6: 切换目录与复制 Hugo 执行文件&lt;/strong&gt;&lt;/em&gt;&#xA;根据提示，首先使用 &lt;strong&gt;&lt;code&gt;cd dev&lt;/code&gt;&lt;/strong&gt; 命令&lt;strong&gt;切换到&lt;/strong&gt;新创建的 &lt;code&gt;dev&lt;/code&gt; 站点&lt;strong&gt;根目录&lt;/strong&gt;。因为 &lt;code&gt;hugo.exe&lt;/code&gt; 不在系统路径中，需要将其&lt;strong&gt;复制&lt;/strong&gt;到当前的 &lt;code&gt;dev&lt;/code&gt; 目录下，才能在该目录中执行 &lt;strong&gt;Hugo&lt;/strong&gt; 相关命令。&lt;/p&gt;&#xA;&lt;h2 id=&#34;part5-本地预览-无主题&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;part5: 本地预览 (无主题)&lt;/span&gt;&#xA;  &lt;a href=&#34;#part5-%e6%9c%ac%e5%9c%b0%e9%a2%84%e8%a7%88-%e6%97%a0%e4%b8%bb%e9%a2%98&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&lt;p&gt;(04:10-04:28) &lt;em&gt;&lt;strong&gt;5.1: 准备本地预览&lt;/strong&gt;&lt;/em&gt;&#xA;根据之前的步骤提示，下一步是安装主题，但作者决定先&lt;strong&gt;不安装主题&lt;/strong&gt;，直接&lt;strong&gt;启动本地服务&lt;/strong&gt;看下效果。&lt;/p&gt;&#xA;&lt;p&gt;(04:28-05:08) &lt;em&gt;&lt;strong&gt;5.2: 启动 Hugo 本地服务 (&lt;code&gt;hugo server -D&lt;/code&gt;)&lt;/strong&gt;&lt;/em&gt;&#xA;在 &lt;code&gt;dev&lt;/code&gt; 目录下，执行命令 &lt;strong&gt;&lt;code&gt;hugo server -D&lt;/code&gt;&lt;/strong&gt; 来启动 &lt;strong&gt;Hugo&lt;/strong&gt; 的&lt;strong&gt;内置Web服务器&lt;/strong&gt;进行本地预览。解释 &lt;code&gt;-D&lt;/code&gt; 是 &lt;code&gt;--buildDrafts&lt;/code&gt; 的&lt;strong&gt;简写&lt;/strong&gt;，用于包含草稿内容。命令成功执行后，输出了本地服务器地址 &lt;strong&gt;&lt;code&gt;http://localhost:1313&lt;/code&gt;&lt;/strong&gt;。&lt;/p&gt;&#xA;&lt;p&gt;(05:08-05:16) &lt;em&gt;&lt;strong&gt;5.3: 浏览器访问与结果 (Page Not Found)&lt;/strong&gt;&lt;/em&gt;&#xA;&lt;strong&gt;复制&lt;/strong&gt;该地址并在浏览器中打开。♈页面显示 &lt;strong&gt;&lt;code&gt;Page Not Found&lt;/code&gt;&lt;/strong&gt; (404错误)。作者解释这是&lt;strong&gt;正常现象&lt;/strong&gt;，因为目前&lt;strong&gt;既没有安装主题，也没有任何内容&lt;/strong&gt;，但这表明 &lt;strong&gt;Hugo 服务已经成功启动&lt;/strong&gt;。&lt;/p&gt;&#xA;&lt;h2 id=&#34;part6-查找与下载-hugo-主题-stack&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;part6: 查找与下载 Hugo 主题 (Stack)&lt;/span&gt;&#xA;  &lt;a href=&#34;#part6-%e6%9f%a5%e6%89%be%e4%b8%8e%e4%b8%8b%e8%bd%bd-hugo-%e4%b8%bb%e9%a2%98-stack&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&lt;p&gt;(05:16-05:33) &lt;em&gt;&lt;strong&gt;6.1: 前往 Hugo 主题站&lt;/strong&gt;&lt;/em&gt;&#xA;回到命令行输出提示，明确需要&lt;strong&gt;安装一个主题&lt;/strong&gt;。再次访问 &lt;strong&gt;Hugo&lt;/strong&gt; 官网 (&lt;strong&gt;gohugo.io&lt;/strong&gt;)，点击导航栏中的 &lt;code&gt;Themes&lt;/code&gt;。&lt;/p&gt;&#xA;&lt;p&gt;(05:33-05:56) &lt;em&gt;&lt;strong&gt;6.2: 选择 Stack 主题&lt;/strong&gt;&lt;/em&gt;&#xA;浏览 &lt;strong&gt;Hugo 主题&lt;/strong&gt;列表，作者选择了名为 &lt;strong&gt;&lt;code&gt;Stack&lt;/code&gt;&lt;/strong&gt; 的主题（卡片式风格，适用于博主）。点击进入该主题的详情页。&lt;/p&gt;&#xA;&lt;p&gt;(05:56-06:13) &lt;em&gt;&lt;strong&gt;6.3: ♈下载 Stack 主题源码&lt;/strong&gt;&lt;/em&gt;&#xA;在 &lt;strong&gt;Stack&lt;/strong&gt; 主题详情页，点击 &lt;code&gt;Download&lt;/code&gt; 按钮，跳转到该主题的 &lt;strong&gt;GitHub 仓库&lt;/strong&gt; (&lt;code&gt;CallMeMaybe/hugo-theme-stack&lt;/code&gt;)。在仓库页面，同样通过 &lt;code&gt;Tags&lt;/code&gt; 找到最新版本 &lt;strong&gt;v3.26.0&lt;/strong&gt;，♈并点击 &lt;strong&gt;&lt;code&gt;Source code (zip)&lt;/code&gt;&lt;/strong&gt; &lt;strong&gt;下载主题的源代码压缩包&lt;/strong&gt;。&lt;/p&gt;&#xA;&lt;h2 id=&#34;part7-安装与配置-hugo-主题&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;part7: 安装与配置 Hugo 主题&lt;/span&gt;&#xA;  &lt;a href=&#34;#part7-%e5%ae%89%e8%a3%85%e4%b8%8e%e9%85%8d%e7%bd%ae-hugo-%e4%b8%bb%e9%a2%98&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&lt;p&gt;(06:13-06:33) &lt;em&gt;&lt;strong&gt;7.1: 放置主题文件&lt;/strong&gt;&lt;/em&gt;&#xA;展示下载好的主题压缩包 &lt;code&gt;hugo-theme-stack-3.26.0.zip&lt;/code&gt;。回到本地的 &lt;strong&gt;Hugo&lt;/strong&gt; 站点 &lt;code&gt;dev&lt;/code&gt; 目录，找到 &lt;code&gt;themes&lt;/code&gt; 文件夹。♈将下载的&lt;strong&gt;主题压缩包&lt;/strong&gt;移动到 &lt;code&gt;themes&lt;/code&gt; 文件夹内，并进行&lt;strong&gt;解压&lt;/strong&gt;。&lt;/p&gt;&#xA;&lt;p&gt;(06:33-07:03) &lt;em&gt;&lt;strong&gt;7.2: 重命名主题文件夹与修改配置&lt;/strong&gt;&lt;/em&gt;&#xA;解压后的主题文件夹名带有版本号 (&lt;code&gt;hugo-theme-stack-3.26.0&lt;/code&gt;)。为了方便配置，♒将其&lt;strong&gt;重命名&lt;/strong&gt;为 &lt;code&gt;hugo-theme-stack&lt;/code&gt;。打开站点根目录下的&lt;strong&gt;配置文件&lt;/strong&gt; &lt;code&gt;hugo.yaml&lt;/code&gt; (之前从主题的 &lt;code&gt;exampleSite&lt;/code&gt; 复制过来的)。找到 &lt;code&gt;theme&lt;/code&gt; 配置项，将其值修改为&lt;strong&gt;刚刚重命名&lt;/strong&gt;的文件夹名 &lt;code&gt;hugo-theme-stack&lt;/code&gt;。&lt;strong&gt;保存&lt;/strong&gt;配置文件。&lt;/p&gt;&#xA;&lt;p&gt;(07:03-07:19) &lt;em&gt;&lt;strong&gt;7.3: 应用主题示例配置与内容&lt;/strong&gt;&lt;/em&gt;&#xA;为了快速看到效果，作者将主题♐ &lt;code&gt;exampleSite&lt;/code&gt; 目录下的 &lt;code&gt;content&lt;/code&gt; 文件夹和 &lt;code&gt;hugo.yaml&lt;/code&gt; 文件&lt;strong&gt;复制&lt;/strong&gt;到站点根目录 (&lt;code&gt;dev&lt;/code&gt;) 下，并选择&lt;strong&gt;覆盖&lt;/strong&gt;现有文件。这样就♈直接使用了主题&lt;strong&gt;自带的示例内容和配置&lt;/strong&gt;。&lt;/p&gt;&#xA;&lt;p&gt;(07:19-07:28) &lt;em&gt;&lt;strong&gt;7.4: 清理与重启服务&lt;/strong&gt;&lt;/em&gt;&#xA;♐删除了站点根目录下原有的 &lt;code&gt;hugo.toml&lt;/code&gt; 文件【因为现在使用 &lt;code&gt;hugo.yaml&lt;/code&gt;，它们是同一个配置文件，只是后缀名不同】。回到命令行窗口，&lt;strong&gt;停止&lt;/strong&gt;之前运行的 &lt;strong&gt;Hugo&lt;/strong&gt; 服务（通过按 Ctrl+C，虽然画面未显示），然后再次执行 &lt;strong&gt;&lt;code&gt;hugo server -D&lt;/code&gt;&lt;/strong&gt; 命令&lt;strong&gt;重新启动服务&lt;/strong&gt;。&lt;/p&gt;&#xA;&lt;p&gt;(07:28-07:47) &lt;em&gt;&lt;strong&gt;7.5: 预览带主题的站点&lt;/strong&gt;&lt;/em&gt;&#xA;&lt;strong&gt;刷新&lt;/strong&gt;浏览器中 &lt;code&gt;http://localhost:1313&lt;/code&gt; 页面。此时，网站成功加载了 &lt;strong&gt;Stack 主题&lt;/strong&gt;和其&lt;strong&gt;示例内容&lt;/strong&gt;，外观与之前展示的成品相似。&lt;/p&gt;&#xA;&lt;h2 id=&#34;part8-主题示例内容处理&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;part8: 主题示例内容处理&lt;/span&gt;&#xA;  &lt;a href=&#34;#part8-%e4%b8%bb%e9%a2%98%e7%a4%ba%e4%be%8b%e5%86%85%e5%ae%b9%e5%a4%84%e7%90%86&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&lt;p&gt;(07:47-08:07) &lt;em&gt;&lt;strong&gt;8.1: 删除 Rich Content 示例文章&lt;/strong&gt;&lt;/em&gt;&#xA;在预览页面滚动时，作者提到主题♋示例中有一个名为 &lt;code&gt;rich-content&lt;/code&gt; 的文章。因为这篇文章&lt;strong&gt;引用了 YouTube 等外部资源&lt;/strong&gt;，在国内网络环境下可能导致&lt;strong&gt;加载超时&lt;/strong&gt;或构建失败，所以♈建议&lt;strong&gt;删除&lt;/strong&gt;。随后展示了♈在 &lt;code&gt;根目录/content/post&lt;/code&gt; 目录下&lt;strong&gt;删除 &lt;code&gt;rich-content&lt;/code&gt; 文件夹&lt;/strong&gt;的操作。&lt;/p&gt;&#xA;&lt;p&gt;(08:07-08:39) &lt;em&gt;&lt;strong&gt;8.2: 参考主题 Demo 站&lt;/strong&gt;&lt;/em&gt;&#xA;回到主题的 &lt;strong&gt;GitHub 仓库&lt;/strong&gt;页面，指出 &lt;code&gt;README.md&lt;/code&gt; 文件通常包含重要信息。找到了♋主题提供的 &lt;strong&gt;Demo 演示站点&lt;/strong&gt;链接 (&lt;code&gt;demo.stack.jimmycai.com&lt;/code&gt;) 并打开。说明可以通过访问 &lt;strong&gt;Demo 站点&lt;/strong&gt;来了解 &lt;code&gt;rich-content&lt;/code&gt; 页面原本包含哪些内容（如嵌入视频、特殊格式等）。&lt;/p&gt;&#xA;&lt;h2 id=&#34;part9-hugo-国际化-i18n-功能说明&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;part9: Hugo 国际化 (i18n) 功能说明&lt;/span&gt;&#xA;  &lt;a href=&#34;#part9-hugo-%e5%9b%bd%e9%99%85%e5%8c%96-i18n-%e5%8a%9f%e8%83%bd%e8%af%b4%e6%98%8e&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&lt;p&gt;(08:39-09:04) &lt;em&gt;&lt;strong&gt;9.1: 文件名与语言代码&lt;/strong&gt;&lt;/em&gt;&#xA;解释 &lt;strong&gt;Hugo&lt;/strong&gt; 的&lt;strong&gt;国际化 (i18n)&lt;/strong&gt; 功能。以 &lt;code&gt;dev/content/post/chinese-test&lt;/code&gt; 文件夹为例，其中的内容文件是 &lt;code&gt;index.zh-cn.md&lt;/code&gt;。指出文件名中的 &lt;strong&gt;&lt;code&gt;.zh-cn&lt;/code&gt;&lt;/strong&gt; 就是&lt;strong&gt;语言代码&lt;/strong&gt;。对比 &lt;code&gt;emoji-support&lt;/code&gt; 文件夹下的 &lt;code&gt;index.md&lt;/code&gt; 文件，它&lt;strong&gt;没有语言代码&lt;/strong&gt;。&lt;/p&gt;&#xA;&lt;p&gt;(09:04-09:19) &lt;em&gt;&lt;strong&gt;9.2: 国际化工作原理&lt;/strong&gt;&lt;/em&gt;&#xA;说明：如果文件名&lt;strong&gt;不带语言代码&lt;/strong&gt; (如 &lt;code&gt;index.md&lt;/code&gt;)，则该内容属于在 &lt;code&gt;hugo.yaml&lt;/code&gt; 中配置的&lt;strong&gt;默认语言&lt;/strong&gt;（此例中为&lt;strong&gt;英语&lt;/strong&gt;）。♈网站会根据用户切换的语言（通过页面上的语言切换器）加载对应语言代码的文件【&lt;strong&gt;切出对应后缀名的文件&lt;/strong&gt;】。例如，♈切换到中文，会加载 &lt;code&gt;index.zh-cn.md&lt;/code&gt;；♈切换到英文，会加载 &lt;code&gt;index.en.md&lt;/code&gt; 或默认的 &lt;code&gt;index.md&lt;/code&gt;。&#xA;也就是当访问者在您的网站上选择或&lt;strong&gt;切换到中文（简体） 这个语言选项&lt;/strong&gt;时，&lt;strong&gt;Hugo 会查找并使用带有 .zh-cn.md 后缀的文件来渲染该页面&lt;/strong&gt;，比如 有一个名为 我的笔记.md 的 Markdown 文件，并且您希望它只在网站的中文环境下显示，需要将其重命名为 &lt;strong&gt;我的笔记.zh-cn.md&lt;/strong&gt;&#xA;(09:19-09:29) &lt;em&gt;&lt;strong&gt;9.3: 国际化演示&lt;/strong&gt;&lt;/em&gt;&#xA;为了演示，♈将 &lt;code&gt;chinese-test&lt;/code&gt; 文件夹下的 &lt;code&gt;index.zh-cn.md&lt;/code&gt; &lt;strong&gt;重命名&lt;/strong&gt;为 &lt;code&gt;index.en.md&lt;/code&gt;【&lt;strong&gt;就是改改后缀名而&lt;/strong&gt;】。&lt;strong&gt;刷新&lt;/strong&gt;本地预览页面。此时切换到&lt;strong&gt;英文&lt;/strong&gt;环境，会显示原 &amp;ldquo;Chinese Test&amp;rdquo; 的内容；♈切换到&lt;strong&gt;中文&lt;/strong&gt;环境，则该文章消失，因为对应的中文文件 (&lt;code&gt;index.zh-cn.md&lt;/code&gt;) 已不存在。说明 &lt;strong&gt;Hugo&lt;/strong&gt; 的国际化实现相对&lt;strong&gt;简单&lt;/strong&gt;，只需复制文件并修改语言代码即可。&lt;/p&gt;&#xA;&lt;h2 id=&#34;part10-创建与编辑新内容&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;part10: 创建与编辑新内容&lt;/span&gt;&#xA;  &lt;a href=&#34;#part10-%e5%88%9b%e5%bb%ba%e4%b8%8e%e7%bc%96%e8%be%91%e6%96%b0%e5%86%85%e5%ae%b9&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&lt;p&gt;(09:29-09:57) &lt;em&gt;&lt;strong&gt;10.1: 创建新文章命令 (&lt;code&gt;hugo new content&lt;/code&gt;)&lt;/strong&gt;&lt;/em&gt;&#xA;演示如何使用命令行&lt;strong&gt;创建新文章&lt;/strong&gt;。命令格式为 &lt;strong&gt;&lt;code&gt;hugo new content &amp;lt;section&amp;gt;/&amp;lt;slug&amp;gt;/index.md&lt;/code&gt;&lt;/strong&gt;。其中 &lt;code&gt;&amp;lt;section&amp;gt;&lt;/code&gt; 通常是 &lt;code&gt;content&lt;/code&gt; 目录下的子目录（如 &lt;code&gt;post&lt;/code&gt;），&lt;code&gt;&amp;lt;slug&amp;gt;&lt;/code&gt; 是文章的唯一标识（会成为文件夹名），&lt;code&gt;index.md&lt;/code&gt; 是内容文件名。&#xA;♈作者执行了命令 &lt;strong&gt;&lt;code&gt;hugo new content post/myFirstBlog/index.md&lt;/code&gt;&lt;/strong&gt;，成功创建了一个名为 &lt;code&gt;myFirstBlog&lt;/code&gt; 的文章。&lt;/p&gt;&#xA;&lt;p&gt;(09:57-10:15) &lt;em&gt;&lt;strong&gt;10.2: 编辑新文章内容 (Markdown)&lt;/strong&gt;&lt;/em&gt;&#xA;使用 &lt;strong&gt;Typora&lt;/strong&gt; 编辑器打开新创建的 &lt;code&gt;dev/content/post/myFirstBlog/index.md&lt;/code&gt; 文件。文件自动包含了&lt;strong&gt;基础的 front matter&lt;/strong&gt;（如 &lt;code&gt;title&lt;/code&gt;, &lt;code&gt;date&lt;/code&gt;, &lt;code&gt;draft: true&lt;/code&gt;）。在文件末尾添加了一行 &lt;strong&gt;Markdown&lt;/strong&gt; 内容：&lt;strong&gt;&lt;code&gt;### Hello World!&lt;/code&gt;&lt;/strong&gt;。&lt;strong&gt;保存&lt;/strong&gt;文件。&lt;/p&gt;&#xA;&lt;p&gt;(10:15-10:31) &lt;em&gt;&lt;strong&gt;10.3: 预览新文章&lt;/strong&gt;&lt;/em&gt;&#xA;&lt;strong&gt;刷新&lt;/strong&gt;本地预览页面 (&lt;code&gt;http://localhost:1313&lt;/code&gt;)。新创建的 &lt;strong&gt;&amp;ldquo;MyFirstBlog&amp;rdquo;&lt;/strong&gt; 文章出现在首页列表。点击进入该文章，可以看到刚才添加的 &lt;strong&gt;&amp;ldquo;Hello World!&amp;rdquo;&lt;/strong&gt; 标题。这表明文章已成功创建并显示。&lt;/p&gt;&#xA;&lt;h2 id=&#34;part11-本地搭建完成与后续步骤&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;part11: 本地搭建完成与后续步骤&lt;/span&gt;&#xA;  &lt;a href=&#34;#part11-%e6%9c%ac%e5%9c%b0%e6%90%ad%e5%bb%ba%e5%ae%8c%e6%88%90%e4%b8%8e%e5%90%8e%e7%bb%ad%e6%ad%a5%e9%aa%a4&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&lt;p&gt;(10:31-10:38) &lt;em&gt;&lt;strong&gt;11.1: 本地搭建总结&lt;/strong&gt;&lt;/em&gt;&#xA;至此，使用 &lt;strong&gt;Hugo&lt;/strong&gt; 和 &lt;strong&gt;Stack 主题&lt;/strong&gt;在&lt;strong&gt;本地搭建博客&lt;/strong&gt;的基本流程已经完成。&lt;/p&gt;&#xA;&lt;p&gt;(10:38-10:43) &lt;em&gt;&lt;strong&gt;11.2: 后续内容预告&lt;/strong&gt;&lt;/em&gt;&#xA;说明接下来的步骤将涉及♐&lt;strong&gt;修改配置 hugo.yaml&lt;/strong&gt;【♐至于hugo.yaml有哪些配置 一般要么样式文件里面的hugo.yaml会讲在哪里找，要么样式文件里面的hugo.yaml已经把全部配置给你了】以及如何将博客&lt;strong&gt;部署到 GitHub Pages&lt;/strong&gt;。&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>用AI独立开发MCP服务 集合</title>
      <link>/posts/ai%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/%E7%94%A8ai%E7%8B%AC%E7%AB%8B%E5%BC%80%E5%8F%91mcp-%E9%9B%86%E5%90%88/</link>
      <pubDate>Thu, 20 Feb 2025 20:14:22 +0800</pubDate>
      <guid>/posts/ai%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/%E7%94%A8ai%E7%8B%AC%E7%AB%8B%E5%BC%80%E5%8F%91mcp-%E9%9B%86%E5%90%88/</guid>
      <category domain="/categories/ai%E7%BC%96%E7%A8%8B%E7%AC%94%E8%AE%B0%E7%B9%81%E5%A4%9A-%E8%BF%99%E9%87%8C%E5%AE%B9%E6%98%93%E6%B2%A1%E6%B3%A8%E6%84%8F%E5%88%B0-%E6%89%80%E4%BB%A5%E5%9C%A8%E8%BF%99%E9%87%8C%E8%AE%B0%E5%BD%95%E4%B8%80%E4%B8%8B/">AI编程（笔记繁多 这里容易没注意到 所以在这里记录一下）</category>
      <description>&lt;h2 id=&#34;用ai独立开发mcp服务的集合&#34; class=&#34;heading-element&#34;&gt;&lt;span&gt;用AI独立开发MCP服务的集合&lt;/span&gt;&#xA;  &lt;a href=&#34;#%e7%94%a8ai%e7%8b%ac%e7%ab%8b%e5%bc%80%e5%8f%91mcp%e6%9c%8d%e5%8a%a1%e7%9a%84%e9%9b%86%e5%90%88&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&lt;p&gt;生成MCP服务 生成调用本地项目的MCP服务  httpsaistudio.google.comprompts1yTmovHhdhAThW5Fzigr_4hYlBB8GEaLM&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;&#x9;[1 如何AI编程开发MCP]&#xA;&#x9;&#x9;用AI开发MCP服务 这里用对应的提示词让AI客户端生成满足自己需求的本地MCP服务代码&#xA;&#x9;&#x9;（markdown格式 、简单描述MCP服务要实现的功能 、 告诉AI 本地项目的路径、 告诉AI 要激活哪个虚拟环境、 告诉AI要设置的 模型的key）、&#xA;&#x9;&#x9;（把本地项目的全部代码直接告诉AI、告诉AI 项目运行后的响应情况 也就是直接把终端的完整内容复制给AI，这个终端的完整内容包含程序的运行命令和项目运行效果）&#xA;&#x9;&#x9;（  给AI详细的MCP文档（告诉AI MCP是什么） 、 应该可以让AI生成MCP的标准配置标准配置的对应的字段和参数我还是了解的 ）&#xA;&#x9;【2 案例  创建MCP服务TimeServer的提示词】&#x9; httpsaistudio.google.comprompts1yTmovHhdhAThW5Fzigr_4hYlBB8GEaLM&#xA;&#x9;&#x9;提示词里面需要MCP的哪些参考资料，这里给了链接，直接在链接里面粘贴内容过来&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;</description>
    </item>
    <item>
      <title>github action：0 action部署hugo项目的aciton程序 最基本原理</title>
      <link>/posts/github%E9%87%8D%E8%A6%81%E8%AE%A4%E7%9F%A5/github-actionaction%E9%83%A8%E7%BD%B2hugo%E9%A1%B9%E7%9B%AE%E7%9A%84aciton%E7%A8%8B%E5%BA%8F-%E6%9C%80%E5%9F%BA%E6%9C%AC%E5%8E%9F%E7%90%86/</link>
      <pubDate>Tue, 20 Feb 2024 20:14:22 +0800</pubDate>
      <guid>/posts/github%E9%87%8D%E8%A6%81%E8%AE%A4%E7%9F%A5/github-actionaction%E9%83%A8%E7%BD%B2hugo%E9%A1%B9%E7%9B%AE%E7%9A%84aciton%E7%A8%8B%E5%BA%8F-%E6%9C%80%E5%9F%BA%E6%9C%AC%E5%8E%9F%E7%90%86/</guid>
      <category domain="/categories/github%E9%87%8D%E8%A6%81%E8%AE%A4%E7%9F%A5/">Github重要认知</category>
      <description>&lt;pre&gt;&lt;code&gt;&#x9;[action部署hugo项目的aciton程序]&#xA;&#x9;&#x9;&amp;lt;action部署hugo项目的aciton程序的核心：让action使用hugo命令，action环境需要hugo命令执行hugo博客&amp;gt;&#xA;&#x9;&#x9;&amp;lt;1 有参考作用的使用uses参数的action程序的写法（参考如何让AI写action程序）&amp;gt;&#xA;&#x9;&#x9;&amp;lt;2 有参考作用的使用run字段的action程序的写法 https://aistudio.google.com/prompts/1dv1SBgRsYgFBSgYe1Dseg0dyYouTZ3_P（参考如何让AI写action程序）&amp;gt;&#xA;&#xA;&#x9;[[[[在action环境安装项目包（hugo包）的两种做法（参考如何让AI写action程序）]&#xA;&#x9;&#x9;《1 uses 关键字并指定一个像 别大大佬些好的aciton 比如peaceiris/actions-hugo@v3 这样的“动作 (Action)”时，你是在委托这个预先打包好的工具去完成安装和配置 Hugo 的任务》&#xA;&#x9;&#x9;《2 直接用run字段亲自告诉那个临时的 Linux 系统具体怎么做才能把 Hugo 装好》&#xA;&#xA;&#xA;&#x9;[aciton想部署hugo的核心就是用别人预先写好的东西]&#xA;&#x9;&#x9;《hugo官方有提供官方action动作把仓库代码下载（检出） 到当前的虚拟运行环境中，它就是actions/checkout@v4，通过uses: actions/checkout@v4: 就能使用一个预先写好的、官方提供的“动作” (Action)》&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;</description>
    </item>
    <item>
      <title>github action：2 github action部署项目原理：github action是将项目部署到其它仓库，不是部署到自己的仓库</title>
      <link>/posts/github%E9%87%8D%E8%A6%81%E8%AE%A4%E7%9F%A5/github-actiongithub-action%E9%83%A8%E7%BD%B2%E9%A1%B9%E7%9B%AE%E5%8E%9F%E7%90%86github-action%E6%98%AF%E5%B0%86%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2%E5%88%B0%E5%85%B6%E5%AE%83%E4%BB%93%E5%BA%93%E4%B8%8D%E6%98%AF%E9%83%A8%E7%BD%B2%E5%88%B0%E8%87%AA%E5%B7%B1%E7%9A%84%E4%BB%93%E5%BA%93/</link>
      <pubDate>Mon, 20 Feb 2023 20:14:22 +0800</pubDate>
      <guid>/posts/github%E9%87%8D%E8%A6%81%E8%AE%A4%E7%9F%A5/github-actiongithub-action%E9%83%A8%E7%BD%B2%E9%A1%B9%E7%9B%AE%E5%8E%9F%E7%90%86github-action%E6%98%AF%E5%B0%86%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2%E5%88%B0%E5%85%B6%E5%AE%83%E4%BB%93%E5%BA%93%E4%B8%8D%E6%98%AF%E9%83%A8%E7%BD%B2%E5%88%B0%E8%87%AA%E5%B7%B1%E7%9A%84%E4%BB%93%E5%BA%93/</guid>
      <category domain="/categories/github%E9%87%8D%E8%A6%81%E8%AE%A4%E7%9F%A5/">Github重要认知</category>
      <description>&lt;p&gt;(08:41-10:19) &lt;em&gt;&lt;strong&gt;4.4: 配置 Repository Secret&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;♈ &lt;strong&gt;目的&lt;/strong&gt;：将生成的 Token 安全地提供给 &lt;strong&gt;GitHub Actions workflow&lt;/strong&gt; 使用。&lt;strong&gt;不应该&lt;/strong&gt;直接将 Token 字符串写入 YAML 文件。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;操作路径&lt;/strong&gt;：回到♎♐&lt;strong&gt;存放 Hugo 源代码&lt;/strong&gt;的仓库（即 &lt;code&gt;hugo-main&lt;/code&gt;），进入该仓库的 &lt;code&gt;Settings&lt;/code&gt; -&amp;gt; 左侧菜单 &lt;code&gt;Security&lt;/code&gt; 下的 &lt;code&gt;Secrets and variables&lt;/code&gt; -&amp;gt; &lt;code&gt;Actions&lt;/code&gt;。&lt;/li&gt;&#xA;&lt;li&gt;♈&lt;strong&gt;操作&lt;/strong&gt;：点击 &lt;code&gt;New repository secret&lt;/code&gt; 按钮。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;配置 Secret&lt;/strong&gt;：&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;Name&lt;/code&gt;：输入 &lt;strong&gt;Secret 的名称&lt;/strong&gt;。这个名称&lt;strong&gt;必须&lt;/strong&gt;与 workflow YAML 文件中 &lt;code&gt;secrets.&lt;/code&gt; 后面引用的名称&lt;strong&gt;完全一致&lt;/strong&gt;。作者在这里将其命名为 &lt;code&gt;TOKEN&lt;/code&gt;。&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;Secret&lt;/code&gt;：将刚才&lt;strong&gt;复制并保存&lt;/strong&gt;的&lt;strong&gt;完整 Token 字符串&lt;/strong&gt;粘贴到这里。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;保存&lt;/strong&gt;：点击 &lt;code&gt;Add secret&lt;/code&gt;。&lt;/li&gt;&#xA;&lt;li&gt;♈&lt;strong&gt;优点&lt;/strong&gt;：使用 &lt;strong&gt;Secrets&lt;/strong&gt; 可以&lt;strong&gt;隐藏&lt;/strong&gt;敏感信息，workflow 运行时会安全地注入该值，比硬编码在代码中&lt;strong&gt;安全&lt;/strong&gt;得多&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;[[[[[使用aciton后将分源代码仓库和静态页面仓库 ]https://aistudio.google.com/prompts/1dv1SBgRsYgFBSgYe1Dseg0dyYouTZ3_P&#xA;《《《hugo-main 仓库 (源代码仓库)，专门用来提交项目源码的仓库，以及用来运行action的仓库，不需要开启github page的功能，所以hugo-main仓库不需要公开，也不需要把静态资源上传到这仓库上》&#xA;《《《hugo-dev 仓库 (部署目标/静态页面仓库)，hugo-main运行action后生成的静态资源文件所推送到的仓库，是存放最终网站文件并对外提供访问的地方，它是自动化流程的终点/发布目标，因此我们在仓库开启github page功能》&#xA;《《《aciton中的参数 EXTERNAL_REPOSITORY: letere-gz/hugo-dev 就是用来 明确指定了main仓库部署的目标是这个dev仓库。》&lt;/p&gt;&#xA;</description>
    </item>
  </channel>
</rss>
