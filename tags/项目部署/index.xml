<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>项目部署 on </title>
    <link>https://yichixing.github.io/hugo-Fixlt-dev/tags/%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2/</link>
    <description>Recent content in 项目部署 on </description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Thu, 20 Feb 2025 20:14:22 +0800</lastBuildDate>
    <atom:link href="https://yichixing.github.io/hugo-Fixlt-dev/tags/%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>github page部署hugo博客</title>
      <link>https://yichixing.github.io/hugo-Fixlt-dev/posts/%E9%A1%B9%E7%9B%AE/hugo%E5%8D%9A%E5%AE%A2/github-page%E9%83%A8%E7%BD%B2hugo%E5%8D%9A%E5%AE%A2/</link>
      <pubDate>Thu, 20 Feb 2025 20:14:22 +0800</pubDate>
      <guid>https://yichixing.github.io/hugo-Fixlt-dev/posts/%E9%A1%B9%E7%9B%AE/hugo%E5%8D%9A%E5%AE%A2/github-page%E9%83%A8%E7%BD%B2hugo%E5%8D%9A%E5%AE%A2/</guid>
      <description>&lt;h1 id=&#34;part1-创建新的-github-仓库&#34;&gt;part1: 创建新的 GitHub 仓库&lt;/h1&gt;&#xA;&lt;p&gt;(00:04-00:23) &lt;em&gt;&lt;strong&gt;1.1: 推荐仓库命名&lt;/strong&gt;&lt;/em&gt;&#xA;对于&lt;strong&gt;首次部署博客&lt;/strong&gt;的用户，视频&lt;strong&gt;推荐&lt;/strong&gt;将 GitHub &lt;strong&gt;仓库名称&lt;/strong&gt;设置为 &lt;code&gt;**用户名.github.io**&lt;/code&gt; 的格式。视频中演示了输入 &lt;code&gt;**letere-gg.github.io**&lt;/code&gt; 作为示例。&lt;/p&gt;&#xA;&lt;p&gt;(00:23-00:30) &lt;em&gt;&lt;strong&gt;1.2: 处理命名冲突&lt;/strong&gt;&lt;/em&gt;&#xA;视频指出 &lt;code&gt;**letere-gg.github.io**&lt;/code&gt; 这个特定名称在其账户下&lt;strong&gt;已被占用&lt;/strong&gt;，因为它已被用于&lt;strong&gt;部署&lt;/strong&gt;另一个项目（提及了 &lt;strong&gt;Hexo&lt;/strong&gt;，但后续操作基于 &lt;strong&gt;Hugo&lt;/strong&gt;）。&lt;/p&gt;&#xA;&lt;h1 id=&#34;part2-理解-github-pages-的-url-结构&#34;&gt;part2: 理解 GitHub Pages 的 URL 结构&lt;/h1&gt;&#xA;&lt;p&gt;(00:30-00:47) &lt;em&gt;&lt;strong&gt;2.1: &lt;code&gt;用户名.github.io&lt;/code&gt; 仓库的 URL&lt;/strong&gt;&lt;/em&gt;&#xA;视频展示了名为 &lt;code&gt;**letere-gg.github.io**&lt;/code&gt; 的仓库，在其 &lt;strong&gt;Settings -&amp;gt; Pages&lt;/strong&gt; 中，生成的 &lt;strong&gt;GitHub Pages&lt;/strong&gt; 网站 URL 是&lt;strong&gt;根域名&lt;/strong&gt; &lt;code&gt;**https://letere-gg.github.io**&lt;/code&gt;。&lt;/p&gt;&#xA;&lt;p&gt;(00:48-01:02) &lt;em&gt;&lt;strong&gt;2.2: 普通仓库的 URL&lt;/strong&gt;&lt;/em&gt;&#xA;视频接着展示了另一个名为 &lt;code&gt;**hugo-stack**&lt;/code&gt; 的仓库，在其 &lt;strong&gt;Settings -&amp;gt; Pages&lt;/strong&gt; 中，生成的 &lt;strong&gt;GitHub Pages&lt;/strong&gt; 网站 URL 带有&lt;strong&gt;仓库名称作为子路径&lt;/strong&gt;，即 &lt;code&gt;**https://letere-gg.github.io/hugo-stack**&lt;/code&gt;。&lt;/p&gt;&#xA;&lt;p&gt;(01:02-01:18) &lt;em&gt;&lt;strong&gt;2.3: 部署建议&lt;/strong&gt;&lt;/em&gt;&#xA;基于以上对比，视频&lt;strong&gt;建议首次部署时使用 &lt;code&gt;用户名.github.io&lt;/code&gt; 格式命名仓库&lt;/strong&gt;，这样生成的网站 URL &lt;strong&gt;不带子路径&lt;/strong&gt;，可以&lt;strong&gt;避免一些潜在的 bug&lt;/strong&gt;。&lt;/p&gt;</description>
    </item>
    <item>
      <title>hugo博客action代码部署：action代码解析</title>
      <link>https://yichixing.github.io/hugo-Fixlt-dev/posts/%E9%A1%B9%E7%9B%AE/hugo%E5%8D%9A%E5%AE%A2/action-%E4%BB%A3%E7%A0%81%E6%88%91%E8%87%AA%E5%B7%B1%E5%86%99%E4%B8%8D%E6%9D%A5%E7%9A%84%E4%B8%8D%E7%94%A8ai%E7%9A%84%E6%83%85%E5%86%B5%E4%B8%8B%E9%9C%80%E8%A6%81steps%E5%AD%97%E6%AE%B5%E4%B8%8B%E7%9A%84users%E5%8F%82%E6%95%B0/</link>
      <pubDate>Thu, 20 Feb 2025 20:14:22 +0800</pubDate>
      <guid>https://yichixing.github.io/hugo-Fixlt-dev/posts/%E9%A1%B9%E7%9B%AE/hugo%E5%8D%9A%E5%AE%A2/action-%E4%BB%A3%E7%A0%81%E6%88%91%E8%87%AA%E5%B7%B1%E5%86%99%E4%B8%8D%E6%9D%A5%E7%9A%84%E4%B8%8D%E7%94%A8ai%E7%9A%84%E6%83%85%E5%86%B5%E4%B8%8B%E9%9C%80%E8%A6%81steps%E5%AD%97%E6%AE%B5%E4%B8%8B%E7%9A%84users%E5%8F%82%E6%95%B0/</guid>
      <description>&lt;h1 id=&#34;hugo博客的action代码解析用aciton配置hugo博客的action代码&#34;&gt;Hugo博客的action代码：解析用aciton配置hugo博客的action代码&lt;/h1&gt;&#xA;&lt;p&gt;好的，这是视频中展示的、由社区贡献者 (peaceiris) 维护的用于通过 GitHub Actions 部署 Hugo 站点的 Actions 工作流 YAML 代码：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 工作流名称&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;deploy&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 触发工作流的事件&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;on&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;push&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;branches&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#75715e&#34;&gt;# 仅在 main 分支被推送时触发&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#ae81ff&#34;&gt;main&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 定义工作流中的作业&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;jobs&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;# 定义一个名为 deploy 的作业&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;deploy&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;# 指定作业运行的环境为最新的 Ubuntu 系统&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;runs-on&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;ubuntu-latest&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;# 定义作业中的步骤&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;steps&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#75715e&#34;&gt;# 步骤1：检出代码&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Checkout&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;# 使用官方的 actions/checkout 动作来获取仓库代码&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;uses&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;actions/checkout@v4&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;with&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#75715e&#34;&gt;# 获取完整的 Git 历史记录（对于部署工具 peaceiris/actions-gh-pages 可能需要）&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#75715e&#34;&gt;# 0 表示获取所有历史，而不是默认的浅克隆（只获取最后一次提交）&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#f92672&#34;&gt;fetch-depth&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#75715e&#34;&gt;# 步骤2：设置 Hugo 环境&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Setup Hugo&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;# 使用社区维护的 peaceiris/actions-hugo 动作来安装 Hugo&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;uses&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;peaceiris/actions-hugo@v3&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;with&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#75715e&#34;&gt;# 指定要安装的 Hugo 版本为最新版&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#f92672&#34;&gt;hugo-version&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;latest&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#75715e&#34;&gt;# 明确指定安装 Hugo 的 Extended 版本（支持 SASS/SCSS 等特性）&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#f92672&#34;&gt;extended&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#75715e&#34;&gt;# 步骤3：构建网站&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Build Web&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;# 运行 Hugo 命令来生成静态网站文件&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;# -D 参数表示包含草稿内容（如果本地预览用过，这里保持一致，或按需移除）&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;run&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;hugo -D&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#75715e&#34;&gt;# 步骤4：部署网站到 GitHub Pages&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Deploy Web&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;# 使用社区维护的 peaceiris/actions-gh-pages 动作来部署&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;uses&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;peaceiris/actions-gh-pages@v4&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;with&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#75715e&#34;&gt;# 指定用于认证的 Personal Access Token (PAT)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#75715e&#34;&gt;# ${{ secrets.TOKEN }} 会从仓库的 Secrets 中读取名为 TOKEN 的值&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#75715e&#34;&gt;# （视频中占位符是 你的token变量名，这里假设你设置为 TOKEN）&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#f92672&#34;&gt;PERSONAL_TOKEN&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;${{ secrets.TOKEN }}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#75715e&#34;&gt;# 指定要将静态文件部署到的目标仓库&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#75715e&#34;&gt;# 格式为：你的GitHub用户名/目标仓库名&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#75715e&#34;&gt;# （视频中占位符是 你的github名/你的仓库名，这里假设目标仓库是 letere-gz/hugo-dev）&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#f92672&#34;&gt;EXTERNAL_REPOSITORY&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;letere-gz/hugo-dev&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#75715e&#34;&gt;# 指定将静态文件推送到目标仓库的哪个分支（通常是 gh-pages 或 main）&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#f92672&#34;&gt;PUBLISH_BRANCH&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;main&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#75715e&#34;&gt;# 指定包含构建好的静态网站文件的目录（Hugo 默认生成到 public）&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#f92672&#34;&gt;PUBLISH_DIR&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;./public&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#75715e&#34;&gt;# 自定义部署时 Git 提交的信息&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#f92672&#34;&gt;commit_message&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;auto deploy&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;代码解释 (遵循托勒斯法则/Law of Demeter - 关注“做什么”而非“怎么做”的内部细节):&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>hugo博客action代码部署：hugo博客的action代码本体</title>
      <link>https://yichixing.github.io/hugo-Fixlt-dev/posts/%E9%A1%B9%E7%9B%AE/hugo%E5%8D%9A%E5%AE%A2/hugo%E5%8D%9A%E5%AE%A2%E9%83%A8%E7%BD%B2%E7%9A%84action%E4%BB%A3%E7%A0%81%E6%9C%AC%E8%BA%AB/</link>
      <pubDate>Thu, 20 Feb 2025 20:14:22 +0800</pubDate>
      <guid>https://yichixing.github.io/hugo-Fixlt-dev/posts/%E9%A1%B9%E7%9B%AE/hugo%E5%8D%9A%E5%AE%A2/hugo%E5%8D%9A%E5%AE%A2%E9%83%A8%E7%BD%B2%E7%9A%84action%E4%BB%A3%E7%A0%81%E6%9C%AC%E8%BA%AB/</guid>
      <description>&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 工作流名称&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;deploy&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 触发工作流的事件&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;on&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;push&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;branches&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#75715e&#34;&gt;# 仅在 main 分支被推送时触发&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#ae81ff&#34;&gt;main&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 定义工作流中的作业&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;jobs&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;# 定义一个名为 deploy 的作业&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;deploy&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;# 指定作业运行的环境为最新的 Ubuntu 系统&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;runs-on&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;ubuntu-latest&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;# 定义作业中的步骤&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;steps&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#75715e&#34;&gt;# 步骤1：检出代码&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Checkout&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;# 使用官方的 actions/checkout 动作来获取仓库代码&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;uses&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;actions/checkout@v4&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;with&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#75715e&#34;&gt;# 获取完整的 Git 历史记录（对于部署工具 peaceiris/actions-gh-pages 可能需要）&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#75715e&#34;&gt;# 0 表示获取所有历史，而不是默认的浅克隆（只获取最后一次提交）&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#f92672&#34;&gt;fetch-depth&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#75715e&#34;&gt;# 步骤2：设置 Hugo 环境&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Setup Hugo&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;# 使用社区维护的 peaceiris/actions-hugo 动作来安装 Hugo&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;uses&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;peaceiris/actions-hugo@v3&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;with&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#75715e&#34;&gt;# 指定要安装的 Hugo 版本为最新版&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#f92672&#34;&gt;hugo-version&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;latest&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#75715e&#34;&gt;# 明确指定安装 Hugo 的 Extended 版本（支持 SASS/SCSS 等特性）&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#f92672&#34;&gt;extended&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#75715e&#34;&gt;# 步骤3：构建网站&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Build Web&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;# 运行 Hugo 命令来生成静态网站文件&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;# -D 参数表示包含草稿内容（如果本地预览用过，这里保持一致，或按需移除）&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;run&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;hugo -D&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#75715e&#34;&gt;# 步骤4：部署网站到 GitHub Pages&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Deploy Web&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;# 使用社区维护的 peaceiris/actions-gh-pages 动作来部署&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;uses&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;peaceiris/actions-gh-pages@v4&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;with&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#75715e&#34;&gt;# 指定用于认证的 Personal Access Token (PAT)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#75715e&#34;&gt;# ${{ secrets.TOKEN }} 会从仓库的 Secrets 中读取名为 TOKEN 的值&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#75715e&#34;&gt;# （视频中占位符是 你的token变量名，这里假设你设置为 TOKEN）&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#f92672&#34;&gt;PERSONAL_TOKEN&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;${{ secrets.TOKEN }}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#75715e&#34;&gt;# 指定要将静态文件部署到的目标仓库&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#75715e&#34;&gt;# 格式为：你的GitHub用户名/目标仓库名&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#75715e&#34;&gt;# （视频中占位符是 你的github名/你的仓库名，这里假设目标仓库是 letere-gz/hugo-dev）&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#f92672&#34;&gt;EXTERNAL_REPOSITORY&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;letere-gz/hugo-dev&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#75715e&#34;&gt;# 指定将静态文件推送到目标仓库的哪个分支（通常是 gh-pages 或 main）&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#f92672&#34;&gt;PUBLISH_BRANCH&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;main&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#75715e&#34;&gt;# 指定包含构建好的静态网站文件的目录（Hugo 默认生成到 public）&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#f92672&#34;&gt;PUBLISH_DIR&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;./public&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#75715e&#34;&gt;# 自定义部署时 Git 提交的信息&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#f92672&#34;&gt;commit_message&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;auto deploy&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>使用github-action自动部署hugo博客到“page”仓库</title>
      <link>https://yichixing.github.io/hugo-Fixlt-dev/posts/%E9%A1%B9%E7%9B%AE/hugo%E5%8D%9A%E5%AE%A2/%E4%BD%BF%E7%94%A8github-action%E8%87%AA%E5%8A%A8%E9%83%A8%E7%BD%B2hugo%E5%8D%9A%E5%AE%A2%E5%88%B0page%E4%BB%93%E5%BA%93/</link>
      <pubDate>Thu, 20 Feb 2025 20:14:22 +0800</pubDate>
      <guid>https://yichixing.github.io/hugo-Fixlt-dev/posts/%E9%A1%B9%E7%9B%AE/hugo%E5%8D%9A%E5%AE%A2/%E4%BD%BF%E7%94%A8github-action%E8%87%AA%E5%8A%A8%E9%83%A8%E7%BD%B2hugo%E5%8D%9A%E5%AE%A2%E5%88%B0page%E4%BB%93%E5%BA%93/</guid>
      <description>&lt;h1 id=&#34;part1-介绍-github-action-自动化部署-hugo-博客&#34;&gt;part1: 介绍 GitHub Action 自动化部署 Hugo 博客&lt;/h1&gt;&#xA;&lt;p&gt;(00:00-00:09) &lt;em&gt;&lt;strong&gt;1.1: 介绍目标&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;视频开篇展示了一个本地运行的 &lt;strong&gt;Hugo&lt;/strong&gt; 博客 (&lt;code&gt;localhost:1313&lt;/code&gt;)。&lt;/li&gt;&#xA;&lt;li&gt;目标是向大家介绍如何通过 &lt;strong&gt;GitHub&lt;/strong&gt; 的 &lt;strong&gt;GitHub Actions&lt;/strong&gt; 功能来&lt;strong&gt;自动部署&lt;/strong&gt;博客。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;(00:09-00:32) &lt;em&gt;&lt;strong&gt;1.2: 手动部署痛点与自动化优势&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;♈指出传统方式下，每次修改完文件后，都需要&lt;strong&gt;手动将生成&lt;/strong&gt;的 &lt;code&gt;public&lt;/code&gt; 文件夹&lt;strong&gt;上传&lt;/strong&gt;到服务器或托管平台，这个过程比较&lt;strong&gt;麻烦&lt;/strong&gt;。&lt;/li&gt;&#xA;&lt;li&gt;♈使用 &lt;strong&gt;GitHub Actions&lt;/strong&gt; 可以实现&lt;strong&gt;自动化&lt;/strong&gt;：&lt;strong&gt;自动&lt;/strong&gt;帮我们&lt;strong&gt;生成&lt;/strong&gt; &lt;code&gt;public&lt;/code&gt; 目录，并将其&lt;strong&gt;部署&lt;/strong&gt;到&lt;strong&gt;静态页面网站&lt;/strong&gt;（如 GitHub Pages）。&lt;/li&gt;&#xA;&lt;li&gt;♈&lt;strong&gt;优点&lt;/strong&gt;：只需&lt;strong&gt;提交代码&lt;/strong&gt; (&lt;code&gt;git push&lt;/code&gt;)，后续的&lt;strong&gt;构建&lt;/strong&gt;和&lt;strong&gt;部署&lt;/strong&gt;过程就能&lt;strong&gt;自动完成&lt;/strong&gt;，&lt;strong&gt;方便&lt;/strong&gt;很多。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h1 id=&#34;part2-创建-github-仓库并推送-hugo-源码&#34;&gt;part2: 创建 GitHub 仓库并推送 Hugo 源码&lt;/h1&gt;&#xA;&lt;p&gt;(00:32-00:41) &lt;em&gt;&lt;strong&gt;2.1: 创建仓库准备&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;要实现自动化部署，首先需要一个 &lt;strong&gt;GitHub 仓库&lt;/strong&gt;来存放 &lt;strong&gt;Hugo&lt;/strong&gt; 项目的&lt;strong&gt;主文件&lt;/strong&gt;（源代码）。&lt;/li&gt;&#xA;&lt;li&gt;操作：导航到 &lt;strong&gt;GitHub&lt;/strong&gt; 网站，准备&lt;strong&gt;创建&lt;/strong&gt;一个新的仓库。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;(00:41-01:12) &lt;em&gt;&lt;strong&gt;2.2: 创建私有仓库&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;在 GitHub 创建新仓库页面（经历短暂的网络卡顿后），设置仓库信息：&#xA;&lt;ul&gt;&#xA;&lt;li&gt;仓库名：&lt;code&gt;hugo-main&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;可见性：&lt;strong&gt;建议&lt;/strong&gt;选择&lt;strong&gt;私有（Private）&lt;/strong&gt;，因为源代码一般不需要公开。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;操作：点击 &lt;code&gt;Create repository&lt;/code&gt; 完成创建。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;(01:12-01:24) &lt;em&gt;&lt;strong&gt;2.3: 上传文件准备&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;仓库创建完成后，需要将本地的 &lt;strong&gt;Hugo&lt;/strong&gt; 项目文件&lt;strong&gt;上传&lt;/strong&gt;到这个新仓库。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;关键点&lt;/strong&gt;：上传前需要注意&lt;strong&gt;忽略&lt;/strong&gt;掉一些不需要版本控制的文件。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;(01:24-02:04) &lt;em&gt;&lt;strong&gt;2.4: 配置 .gitignore 忽略生成文件&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>搭建本地hugo博客</title>
      <link>https://yichixing.github.io/hugo-Fixlt-dev/posts/%E9%A1%B9%E7%9B%AE/hugo%E5%8D%9A%E5%AE%A2/%E6%90%AD%E5%BB%BA%E6%9C%AC%E5%9C%B0hugo%E5%8D%9A%E5%AE%A2/</link>
      <pubDate>Thu, 20 Feb 2025 20:14:22 +0800</pubDate>
      <guid>https://yichixing.github.io/hugo-Fixlt-dev/posts/%E9%A1%B9%E7%9B%AE/hugo%E5%8D%9A%E5%AE%A2/%E6%90%AD%E5%BB%BA%E6%9C%AC%E5%9C%B0hugo%E5%8D%9A%E5%AE%A2/</guid>
      <description>&lt;h1 id=&#34;part1-hugo--github-免费部署自己的博客介绍&#34;&gt;part1: Hugo + GitHub 免费部署自己的博客介绍&lt;/h1&gt;&#xA;&lt;p&gt;(00:00-00:15) &lt;em&gt;&lt;strong&gt;1.1: 视频目标与演示&lt;/strong&gt;&lt;/em&gt;&#xA;视频旨在分享如何使用 &lt;strong&gt;Hugo&lt;/strong&gt; 和 &lt;strong&gt;GitHub&lt;/strong&gt; &lt;strong&gt;免费部署&lt;/strong&gt;一个属于自己的&lt;strong&gt;个人博客&lt;/strong&gt;。开头展示了作者已经&lt;strong&gt;部署成功&lt;/strong&gt;的博客页面作为最终效果预览。&lt;/p&gt;&#xA;&lt;p&gt;(00:15-00:37) &lt;em&gt;&lt;strong&gt;1.2: 作者说明与目的&lt;/strong&gt;&lt;/em&gt;&#xA;作者声明自己并非专业的教学视频制作者，制作此视频主要是因为近期想更新内容，且正好在研究 &lt;strong&gt;Hugo&lt;/strong&gt; 博客的搭建过程。目的是分享经验，帮助观看者在搭建过程中&lt;strong&gt;少走弯路&lt;/strong&gt;。&lt;/p&gt;&#xA;&lt;p&gt;(00:37-00:44) &lt;em&gt;&lt;strong&gt;1.3: 博客内容示例&lt;/strong&gt;&lt;/em&gt;&#xA;简要展示了博客中的一篇文章，内容即为本次视频所要讲解的 &lt;strong&gt;Hugo + GitHub 免费部署博客&lt;/strong&gt;的&lt;strong&gt;教程记录&lt;/strong&gt;。&lt;/p&gt;&#xA;&lt;h1 id=&#34;part2-搭建动机与-hugo-vs-hexo-对比&#34;&gt;part2: 搭建动机与 Hugo vs Hexo 对比&lt;/h1&gt;&#xA;&lt;p&gt;(00:45-00:57) &lt;em&gt;&lt;strong&gt;2.1: 历史背景 (Hexo)&lt;/strong&gt;&lt;/em&gt;&#xA;作者提到自己之前已经使用 &lt;strong&gt;Hexo&lt;/strong&gt; 框架搭建过一个&lt;strong&gt;个人博客&lt;/strong&gt; (展示了之前的 Hexo 博客页面)。&lt;/p&gt;&#xA;&lt;p&gt;(00:57-01:19) &lt;em&gt;&lt;strong&gt;2.2: 转向 Hugo 的原因&lt;/strong&gt;&lt;/em&gt;&#xA;解释了为何选择使用 &lt;strong&gt;Hugo&lt;/strong&gt; 重新搭建：更换了新电脑 (&lt;strong&gt;天选4&lt;/strong&gt;) 后，之前的 &lt;strong&gt;Hexo&lt;/strong&gt; 本地文件丢失（因为&lt;strong&gt;没有上传备份到 GitHub&lt;/strong&gt;），所以需要重新搭建。借此机会研究并尝试了 &lt;strong&gt;Hugo&lt;/strong&gt;。&lt;/p&gt;&#xA;&lt;p&gt;(01:19-01:30) &lt;em&gt;&lt;strong&gt;2.3: Hugo 使用体验&lt;/strong&gt;&lt;/em&gt;&#xA;作者认为实际使用下来，&lt;strong&gt;Hugo&lt;/strong&gt; &lt;strong&gt;感觉&lt;/strong&gt;比 &lt;strong&gt;Hexo&lt;/strong&gt; &lt;strong&gt;更方便&lt;/strong&gt;。&lt;/p&gt;&#xA;&lt;p&gt;(01:30-01:41) &lt;em&gt;&lt;strong&gt;2.4: 对新手的建议 (Hugo vs Hexo)&lt;/strong&gt;&lt;/em&gt;&#xA;指出 &lt;strong&gt;Hugo&lt;/strong&gt; 的官方文档&lt;strong&gt;基本都是英文&lt;/strong&gt;，可能对新手不太友好。因此，&lt;strong&gt;推荐新手&lt;/strong&gt;优先尝试 &lt;strong&gt;Hexo&lt;/strong&gt; (文档相对更完善，中文资源多)。使用 Hugo 需要&lt;strong&gt;啃英文文档&lt;/strong&gt;，对新手来说较为&lt;strong&gt;麻烦&lt;/strong&gt;。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
